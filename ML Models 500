{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":41880,"databundleVersionId":5677426,"sourceType":"competition"}],"dockerImageVersionId":30408,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/harshyadav02/lgbm-for-both-defog-tdcsfog?scriptVersionId=155259707\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# import library\nimport os\nimport random\nimport pandas as pd\nimport numpy as np","metadata":{"execution":{"iopub.status.busy":"2023-12-16T10:26:44.333684Z","iopub.execute_input":"2023-12-16T10:26:44.333981Z","iopub.status.idle":"2023-12-16T10:26:44.35987Z","shell.execute_reply.started":"2023-12-16T10:26:44.33395Z","shell.execute_reply":"2023-12-16T10:26:44.358933Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":"## Pre-processing (DEFOG)üè°","metadata":{}},{"cell_type":"code","source":"DATA_ROOT_DEFOG = '/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/train/defog/'\ndefog = pd.DataFrame()\nfor root, dirs, files in os.walk(DATA_ROOT_DEFOG):\n    for name in files:       \n        f = os.path.join(root, name)\n        df_list= pd.read_csv(f)\n        df_list['file']= name.split('.')[0]\n        defog = pd.concat([defog, df_list], axis=0)\n\ndefog","metadata":{"execution":{"iopub.status.busy":"2023-12-16T10:26:44.361294Z","iopub.execute_input":"2023-12-16T10:26:44.361591Z","iopub.status.idle":"2023-12-16T10:27:38.181592Z","shell.execute_reply.started":"2023-12-16T10:26:44.361541Z","shell.execute_reply":"2023-12-16T10:27:38.180606Z"},"trusted":true},"execution_count":2,"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"          Time      AccV     AccML     AccAP  StartHesitation  Turn  Walking  \\\n0            0 -1.002697  0.022371  0.068304                0     0        0   \n1            1 -1.002641  0.019173  0.066162                0     0        0   \n2            2 -0.999820  0.019142  0.067536                0     0        0   \n3            3 -0.998023  0.018378  0.068409                0     0        0   \n4            4 -0.998359  0.016726  0.066448                0     0        0   \n...        ...       ...       ...       ...              ...   ...      ...   \n109120  109120 -0.939241  0.031564 -0.394737                0     0        0   \n109121  109121 -0.941096  0.031582 -0.392626                0     0        0   \n109122  109122 -0.940131  0.029092 -0.394385                0     0        0   \n109123  109123 -0.939872  0.028058 -0.398664                0     0        0   \n109124  109124 -0.939006  0.026628 -0.398454                0     0        0   \n\n        Valid   Task        file  \n0       False  False  be9d33541d  \n1       False  False  be9d33541d  \n2       False  False  be9d33541d  \n3       False  False  be9d33541d  \n4       False  False  be9d33541d  \n...       ...    ...         ...  \n109120  False  False  06414383cf  \n109121  False  False  06414383cf  \n109122  False  False  06414383cf  \n109123  False  False  06414383cf  \n109124  False  False  06414383cf  \n\n[13525702 rows x 10 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Time</th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n      <th>StartHesitation</th>\n      <th>Turn</th>\n      <th>Walking</th>\n      <th>Valid</th>\n      <th>Task</th>\n      <th>file</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>-1.002697</td>\n      <td>0.022371</td>\n      <td>0.068304</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>be9d33541d</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>-1.002641</td>\n      <td>0.019173</td>\n      <td>0.066162</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>be9d33541d</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>-0.999820</td>\n      <td>0.019142</td>\n      <td>0.067536</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>be9d33541d</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>-0.998023</td>\n      <td>0.018378</td>\n      <td>0.068409</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>be9d33541d</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>-0.998359</td>\n      <td>0.016726</td>\n      <td>0.066448</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>be9d33541d</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>109120</th>\n      <td>109120</td>\n      <td>-0.939241</td>\n      <td>0.031564</td>\n      <td>-0.394737</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>06414383cf</td>\n    </tr>\n    <tr>\n      <th>109121</th>\n      <td>109121</td>\n      <td>-0.941096</td>\n      <td>0.031582</td>\n      <td>-0.392626</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>06414383cf</td>\n    </tr>\n    <tr>\n      <th>109122</th>\n      <td>109122</td>\n      <td>-0.940131</td>\n      <td>0.029092</td>\n      <td>-0.394385</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>06414383cf</td>\n    </tr>\n    <tr>\n      <th>109123</th>\n      <td>109123</td>\n      <td>-0.939872</td>\n      <td>0.028058</td>\n      <td>-0.398664</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>06414383cf</td>\n    </tr>\n    <tr>\n      <th>109124</th>\n      <td>109124</td>\n      <td>-0.939006</td>\n      <td>0.026628</td>\n      <td>-0.398454</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>06414383cf</td>\n    </tr>\n  </tbody>\n</table>\n<p>13525702 rows √ó 10 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"defog = defog[(defog['Task']==1)&(defog['Valid']==1)]","metadata":{"execution":{"iopub.status.busy":"2023-12-16T10:27:38.183171Z","iopub.execute_input":"2023-12-16T10:27:38.183471Z","iopub.status.idle":"2023-12-16T10:27:38.769477Z","shell.execute_reply.started":"2023-12-16T10:27:38.183441Z","shell.execute_reply":"2023-12-16T10:27:38.768409Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"print('the shape of defog dataset is {}'.format(defog.shape))","metadata":{"execution":{"iopub.status.busy":"2023-12-16T10:27:38.770643Z","iopub.execute_input":"2023-12-16T10:27:38.770945Z","iopub.status.idle":"2023-12-16T10:27:38.776696Z","shell.execute_reply.started":"2023-12-16T10:27:38.770914Z","shell.execute_reply":"2023-12-16T10:27:38.775837Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"the shape of defog dataset is (4090530, 10)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"##  Combining it with üè°defog-metadata.","metadata":{}},{"cell_type":"code","source":"defog_metadata = pd.read_csv(\"/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/defog_metadata.csv\")\ndefog_metadata","metadata":{"execution":{"iopub.status.busy":"2023-12-16T10:27:38.778745Z","iopub.execute_input":"2023-12-16T10:27:38.779073Z","iopub.status.idle":"2023-12-16T10:27:38.802705Z","shell.execute_reply.started":"2023-12-16T10:27:38.779036Z","shell.execute_reply":"2023-12-16T10:27:38.801697Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"             Id Subject  Visit Medication\n0    02ab235146  e1f62e      2         on\n1    02ea782681  ae2d35      2         on\n2    06414383cf  8c1f5e      2        off\n3    092b4c1819  2874c5      1        off\n4    0a900ed8a2  0e3d49      2         on\n..          ...     ...    ...        ...\n132  f3a921edee  1a778d      1        off\n133  f40e8c6ebe  575c60      1        off\n134  f8ddbdd98d  107712      1         on\n135  f9efef91fb  5d9cae      2        off\n136  f9fc61ce85  040587      1         on\n\n[137 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>Subject</th>\n      <th>Visit</th>\n      <th>Medication</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>02ab235146</td>\n      <td>e1f62e</td>\n      <td>2</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>02ea782681</td>\n      <td>ae2d35</td>\n      <td>2</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>06414383cf</td>\n      <td>8c1f5e</td>\n      <td>2</td>\n      <td>off</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>092b4c1819</td>\n      <td>2874c5</td>\n      <td>1</td>\n      <td>off</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0a900ed8a2</td>\n      <td>0e3d49</td>\n      <td>2</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>132</th>\n      <td>f3a921edee</td>\n      <td>1a778d</td>\n      <td>1</td>\n      <td>off</td>\n    </tr>\n    <tr>\n      <th>133</th>\n      <td>f40e8c6ebe</td>\n      <td>575c60</td>\n      <td>1</td>\n      <td>off</td>\n    </tr>\n    <tr>\n      <th>134</th>\n      <td>f8ddbdd98d</td>\n      <td>107712</td>\n      <td>1</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>135</th>\n      <td>f9efef91fb</td>\n      <td>5d9cae</td>\n      <td>2</td>\n      <td>off</td>\n    </tr>\n    <tr>\n      <th>136</th>\n      <td>f9fc61ce85</td>\n      <td>040587</td>\n      <td>1</td>\n      <td>on</td>\n    </tr>\n  </tbody>\n</table>\n<p>137 rows √ó 4 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"defog_m= defog_metadata.merge(defog, how = 'inner', left_on = 'Id', right_on = 'file')\ndefog_m.drop(['file','Valid','Task'], axis = 1, inplace = True)\ndefog_m","metadata":{"execution":{"iopub.status.busy":"2023-12-16T11:20:14.480683Z","iopub.execute_input":"2023-12-16T11:20:14.481673Z","iopub.status.idle":"2023-12-16T11:20:16.804427Z","shell.execute_reply.started":"2023-12-16T11:20:14.481627Z","shell.execute_reply":"2023-12-16T11:20:16.803425Z"},"trusted":true},"execution_count":131,"outputs":[{"execution_count":131,"output_type":"execute_result","data":{"text/plain":"                 Id Subject  Visit Medication    Time      AccV     AccML  \\\n0        02ea782681  ae2d35      2         on    1000 -0.970018  0.061626   \n1        02ea782681  ae2d35      2         on    1001 -0.984375  0.044497   \n2        02ea782681  ae2d35      2         on    1002 -0.984375  0.029016   \n3        02ea782681  ae2d35      2         on    1003 -0.984375  0.015625   \n4        02ea782681  ae2d35      2         on    1004 -0.984670  0.015330   \n...             ...     ...    ...        ...     ...       ...       ...   \n4090525  f9fc61ce85  040587      1         on  119027 -0.961216  0.142428   \n4090526  f9fc61ce85  040587      1         on  119028 -0.960343  0.142836   \n4090527  f9fc61ce85  040587      1         on  119029 -0.957958  0.145494   \n4090528  f9fc61ce85  040587      1         on  119030 -0.960616  0.145839   \n4090529  f9fc61ce85  040587      1         on  119031 -0.967076  0.144342   \n\n            AccAP  StartHesitation  Turn  Walking  \n0       -0.265625                0     0        0  \n1       -0.265625                0     0        0  \n2       -0.265625                0     0        0  \n3       -0.265625                0     0        0  \n4       -0.265625                0     0        0  \n...           ...              ...   ...      ...  \n4090525 -0.289655                0     0        0  \n4090526 -0.290506                0     0        0  \n4090527 -0.290007                0     0        0  \n4090528 -0.291527                0     0        0  \n4090529 -0.292384                0     0        0  \n\n[4090530 rows x 11 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>Subject</th>\n      <th>Visit</th>\n      <th>Medication</th>\n      <th>Time</th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n      <th>StartHesitation</th>\n      <th>Turn</th>\n      <th>Walking</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>02ea782681</td>\n      <td>ae2d35</td>\n      <td>2</td>\n      <td>on</td>\n      <td>1000</td>\n      <td>-0.970018</td>\n      <td>0.061626</td>\n      <td>-0.265625</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>02ea782681</td>\n      <td>ae2d35</td>\n      <td>2</td>\n      <td>on</td>\n      <td>1001</td>\n      <td>-0.984375</td>\n      <td>0.044497</td>\n      <td>-0.265625</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>02ea782681</td>\n      <td>ae2d35</td>\n      <td>2</td>\n      <td>on</td>\n      <td>1002</td>\n      <td>-0.984375</td>\n      <td>0.029016</td>\n      <td>-0.265625</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>02ea782681</td>\n      <td>ae2d35</td>\n      <td>2</td>\n      <td>on</td>\n      <td>1003</td>\n      <td>-0.984375</td>\n      <td>0.015625</td>\n      <td>-0.265625</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>02ea782681</td>\n      <td>ae2d35</td>\n      <td>2</td>\n      <td>on</td>\n      <td>1004</td>\n      <td>-0.984670</td>\n      <td>0.015330</td>\n      <td>-0.265625</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4090525</th>\n      <td>f9fc61ce85</td>\n      <td>040587</td>\n      <td>1</td>\n      <td>on</td>\n      <td>119027</td>\n      <td>-0.961216</td>\n      <td>0.142428</td>\n      <td>-0.289655</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4090526</th>\n      <td>f9fc61ce85</td>\n      <td>040587</td>\n      <td>1</td>\n      <td>on</td>\n      <td>119028</td>\n      <td>-0.960343</td>\n      <td>0.142836</td>\n      <td>-0.290506</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4090527</th>\n      <td>f9fc61ce85</td>\n      <td>040587</td>\n      <td>1</td>\n      <td>on</td>\n      <td>119029</td>\n      <td>-0.957958</td>\n      <td>0.145494</td>\n      <td>-0.290007</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4090528</th>\n      <td>f9fc61ce85</td>\n      <td>040587</td>\n      <td>1</td>\n      <td>on</td>\n      <td>119030</td>\n      <td>-0.960616</td>\n      <td>0.145839</td>\n      <td>-0.291527</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4090529</th>\n      <td>f9fc61ce85</td>\n      <td>040587</td>\n      <td>1</td>\n      <td>on</td>\n      <td>119031</td>\n      <td>-0.967076</td>\n      <td>0.144342</td>\n      <td>-0.292384</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4090530 rows √ó 11 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# summary table function\ndef summary(df):\n    print(f'data shape: {df.shape}')\n    summ = pd.DataFrame(df.dtypes, columns=['data type'])\n    summ['#missing'] = df.isnull().sum().values * 100\n    summ['%missing'] = df.isnull().sum().values / len(df)\n    summ['#unique'] = df.nunique().values\n    desc = pd.DataFrame(df.describe(include='all').transpose())\n    summ['min'] = desc['min'].values\n    summ['max'] = desc['max'].values\n    summ['first value'] = df.loc[0].values\n    summ['second value'] = df.loc[1].values\n    summ['third value'] = df.loc[2].values\n    \n    return summ","metadata":{"execution":{"iopub.status.busy":"2023-12-16T11:21:24.641457Z","iopub.execute_input":"2023-12-16T11:21:24.641861Z","iopub.status.idle":"2023-12-16T11:21:24.65091Z","shell.execute_reply.started":"2023-12-16T11:21:24.641823Z","shell.execute_reply":"2023-12-16T11:21:24.64964Z"},"trusted":true},"execution_count":132,"outputs":[]},{"cell_type":"code","source":"summary(defog_m)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T11:21:31.129477Z","iopub.execute_input":"2023-12-16T11:21:31.130646Z","iopub.status.idle":"2023-12-16T11:21:40.037956Z","shell.execute_reply.started":"2023-12-16T11:21:31.130588Z","shell.execute_reply":"2023-12-16T11:21:40.036969Z"},"trusted":true},"execution_count":133,"outputs":[{"name":"stdout","text":"data shape: (4090530, 11)\n","output_type":"stream"},{"execution_count":133,"output_type":"execute_result","data":{"text/plain":"                data type  #missing  %missing  #unique       min       max  \\\nId                 object         0       0.0       91       NaN       NaN   \nSubject            object         0       0.0       38       NaN       NaN   \nVisit               int64         0       0.0        2       1.0       2.0   \nMedication         object         0       0.0        2       NaN       NaN   \nTime                int64         0       0.0   338197    1000.0  414387.0   \nAccV              float64         0       0.0  3485229 -6.024701  4.458365   \nAccML             float64         0       0.0  3539384 -2.115008  4.524038   \nAccAP             float64         0       0.0  3437121  -5.11865  4.388132   \nStartHesitation     int64         0       0.0        2       0.0       1.0   \nTurn                int64         0       0.0        2       0.0       1.0   \nWalking             int64         0       0.0        2       0.0       1.0   \n\n                first value second value third value  \nId               02ea782681   02ea782681  02ea782681  \nSubject              ae2d35       ae2d35      ae2d35  \nVisit                     2            2           2  \nMedication               on           on          on  \nTime                   1000         1001        1002  \nAccV              -0.970018    -0.984375   -0.984375  \nAccML              0.061626     0.044497    0.029016  \nAccAP             -0.265625    -0.265625   -0.265625  \nStartHesitation           0            0           0  \nTurn                      0            0           0  \nWalking                   0            0           0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data type</th>\n      <th>#missing</th>\n      <th>%missing</th>\n      <th>#unique</th>\n      <th>min</th>\n      <th>max</th>\n      <th>first value</th>\n      <th>second value</th>\n      <th>third value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Id</th>\n      <td>object</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>91</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>02ea782681</td>\n      <td>02ea782681</td>\n      <td>02ea782681</td>\n    </tr>\n    <tr>\n      <th>Subject</th>\n      <td>object</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>38</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>ae2d35</td>\n      <td>ae2d35</td>\n      <td>ae2d35</td>\n    </tr>\n    <tr>\n      <th>Visit</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Medication</th>\n      <td>object</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>on</td>\n      <td>on</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>Time</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>338197</td>\n      <td>1000.0</td>\n      <td>414387.0</td>\n      <td>1000</td>\n      <td>1001</td>\n      <td>1002</td>\n    </tr>\n    <tr>\n      <th>AccV</th>\n      <td>float64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3485229</td>\n      <td>-6.024701</td>\n      <td>4.458365</td>\n      <td>-0.970018</td>\n      <td>-0.984375</td>\n      <td>-0.984375</td>\n    </tr>\n    <tr>\n      <th>AccML</th>\n      <td>float64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3539384</td>\n      <td>-2.115008</td>\n      <td>4.524038</td>\n      <td>0.061626</td>\n      <td>0.044497</td>\n      <td>0.029016</td>\n    </tr>\n    <tr>\n      <th>AccAP</th>\n      <td>float64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3437121</td>\n      <td>-5.11865</td>\n      <td>4.388132</td>\n      <td>-0.265625</td>\n      <td>-0.265625</td>\n      <td>-0.265625</td>\n    </tr>\n    <tr>\n      <th>StartHesitation</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Turn</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Walking</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# garbage collection for memory\nimport gc\ngc.collect()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T11:21:42.388655Z","iopub.execute_input":"2023-12-16T11:21:42.389711Z","iopub.status.idle":"2023-12-16T11:21:42.722372Z","shell.execute_reply.started":"2023-12-16T11:21:42.389666Z","shell.execute_reply":"2023-12-16T11:21:42.721246Z"},"trusted":true},"execution_count":134,"outputs":[{"execution_count":134,"output_type":"execute_result","data":{"text/plain":"1261"},"metadata":{}}]},{"cell_type":"markdown","source":"# Feature engineering and modeling (DEFOG)üè°","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nimport warnings\nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2023-12-16T11:21:59.961308Z","iopub.execute_input":"2023-12-16T11:21:59.962226Z","iopub.status.idle":"2023-12-16T11:21:59.967175Z","shell.execute_reply.started":"2023-12-16T11:21:59.962184Z","shell.execute_reply":"2023-12-16T11:21:59.966038Z"},"trusted":true},"execution_count":135,"outputs":[]},{"cell_type":"code","source":"conditions = [\n    (defog_m['StartHesitation'] == 1),\n    (defog_m['Turn'] == 1),\n    (defog_m['Walking'] == 1)]\nchoices = ['StartHesitation', 'Turn', 'Walking']\ndefog_m['event'] = np.select(conditions, choices, default='Normal')","metadata":{"execution":{"iopub.status.busy":"2023-12-16T11:22:17.377248Z","iopub.execute_input":"2023-12-16T11:22:17.37841Z","iopub.status.idle":"2023-12-16T11:22:18.194448Z","shell.execute_reply.started":"2023-12-16T11:22:17.378365Z","shell.execute_reply":"2023-12-16T11:22:18.193345Z"},"trusted":true},"execution_count":137,"outputs":[]},{"cell_type":"code","source":"defog_m['event'].value_counts().to_frame().style.background_gradient()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:19:55.884232Z","iopub.execute_input":"2023-12-16T12:19:55.885324Z","iopub.status.idle":"2023-12-16T12:19:56.486241Z","shell.execute_reply.started":"2023-12-16T12:19:55.885276Z","shell.execute_reply":"2023-12-16T12:19:56.484935Z"},"trusted":true},"execution_count":214,"outputs":[{"execution_count":214,"output_type":"execute_result","data":{"text/plain":"<pandas.io.formats.style.Styler at 0x797bb2d62d10>","text/html":"<style type=\"text/css\">\n#T_10b4f_row0_col0 {\n  background-color: #023858;\n  color: #f1f1f1;\n}\n#T_10b4f_row1_col0 {\n  background-color: #e1dfed;\n  color: #000000;\n}\n#T_10b4f_row2_col0 {\n  background-color: #fbf3f9;\n  color: #000000;\n}\n#T_10b4f_row3_col0 {\n  background-color: #fff7fb;\n  color: #000000;\n}\n</style>\n<table id=\"T_10b4f_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >event</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_10b4f_level0_row0\" class=\"row_heading level0 row0\" >Normal</th>\n      <td id=\"T_10b4f_row0_col0\" class=\"data row0 col0\" >3404683</td>\n    </tr>\n    <tr>\n      <th id=\"T_10b4f_level0_row1\" class=\"row_heading level0 row1\" >Turn</th>\n      <td id=\"T_10b4f_row1_col0\" class=\"data row1 col0\" >586829</td>\n    </tr>\n    <tr>\n      <th id=\"T_10b4f_level0_row2\" class=\"row_heading level0 row2\" >Walking</th>\n      <td id=\"T_10b4f_row2_col0\" class=\"data row2 col0\" >98518</td>\n    </tr>\n    <tr>\n      <th id=\"T_10b4f_level0_row3\" class=\"row_heading level0 row3\" >StartHesitation</th>\n      <td id=\"T_10b4f_row3_col0\" class=\"data row3 col0\" >500</td>\n    </tr>\n  </tbody>\n</table>\n"},"metadata":{}}]},{"cell_type":"code","source":"train_df = defog_m[['Visit','Medication','Time','AccV','AccML','AccAP','event']]","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:20:06.446591Z","iopub.execute_input":"2023-12-16T12:20:06.447359Z","iopub.status.idle":"2023-12-16T12:20:06.634816Z","shell.execute_reply.started":"2023-12-16T12:20:06.447315Z","shell.execute_reply":"2023-12-16T12:20:06.633931Z"},"trusted":true},"execution_count":216,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:20:06.728641Z","iopub.execute_input":"2023-12-16T12:20:06.729027Z","iopub.status.idle":"2023-12-16T12:20:06.733894Z","shell.execute_reply.started":"2023-12-16T12:20:06.728992Z","shell.execute_reply":"2023-12-16T12:20:06.732816Z"},"trusted":true},"execution_count":217,"outputs":[]},{"cell_type":"code","source":"train_df['Medication'] = le.fit_transform(train_df['Medication'])\ntrain_df['Time'] = train_df['Time'].astype(int)\ntrain_df['Visit'] = train_df['Visit'].astype(int)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:20:08.004005Z","iopub.execute_input":"2023-12-16T12:20:08.004789Z","iopub.status.idle":"2023-12-16T12:20:09.266437Z","shell.execute_reply.started":"2023-12-16T12:20:08.004746Z","shell.execute_reply":"2023-12-16T12:20:09.265286Z"},"trusted":true},"execution_count":218,"outputs":[]},{"cell_type":"code","source":"train_df","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:20:10.596236Z","iopub.execute_input":"2023-12-16T12:20:10.597334Z","iopub.status.idle":"2023-12-16T12:20:10.61469Z","shell.execute_reply.started":"2023-12-16T12:20:10.597288Z","shell.execute_reply":"2023-12-16T12:20:10.613725Z"},"trusted":true},"execution_count":219,"outputs":[{"execution_count":219,"output_type":"execute_result","data":{"text/plain":"         Visit  Medication    Time      AccV     AccML     AccAP   event\n0            2           1    1000 -0.970018  0.061626 -0.265625  Normal\n1            2           1    1001 -0.984375  0.044497 -0.265625  Normal\n2            2           1    1002 -0.984375  0.029016 -0.265625  Normal\n3            2           1    1003 -0.984375  0.015625 -0.265625  Normal\n4            2           1    1004 -0.984670  0.015330 -0.265625  Normal\n...        ...         ...     ...       ...       ...       ...     ...\n4090525      1           1  119027 -0.961216  0.142428 -0.289655  Normal\n4090526      1           1  119028 -0.960343  0.142836 -0.290506  Normal\n4090527      1           1  119029 -0.957958  0.145494 -0.290007  Normal\n4090528      1           1  119030 -0.960616  0.145839 -0.291527  Normal\n4090529      1           1  119031 -0.967076  0.144342 -0.292384  Normal\n\n[4090530 rows x 7 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Visit</th>\n      <th>Medication</th>\n      <th>Time</th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n      <th>event</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1000</td>\n      <td>-0.970018</td>\n      <td>0.061626</td>\n      <td>-0.265625</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1001</td>\n      <td>-0.984375</td>\n      <td>0.044497</td>\n      <td>-0.265625</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1002</td>\n      <td>-0.984375</td>\n      <td>0.029016</td>\n      <td>-0.265625</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1003</td>\n      <td>-0.984375</td>\n      <td>0.015625</td>\n      <td>-0.265625</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1004</td>\n      <td>-0.984670</td>\n      <td>0.015330</td>\n      <td>-0.265625</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4090525</th>\n      <td>1</td>\n      <td>1</td>\n      <td>119027</td>\n      <td>-0.961216</td>\n      <td>0.142428</td>\n      <td>-0.289655</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>4090526</th>\n      <td>1</td>\n      <td>1</td>\n      <td>119028</td>\n      <td>-0.960343</td>\n      <td>0.142836</td>\n      <td>-0.290506</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>4090527</th>\n      <td>1</td>\n      <td>1</td>\n      <td>119029</td>\n      <td>-0.957958</td>\n      <td>0.145494</td>\n      <td>-0.290007</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>4090528</th>\n      <td>1</td>\n      <td>1</td>\n      <td>119030</td>\n      <td>-0.960616</td>\n      <td>0.145839</td>\n      <td>-0.291527</td>\n      <td>Normal</td>\n    </tr>\n    <tr>\n      <th>4090529</th>\n      <td>1</td>\n      <td>1</td>\n      <td>119031</td>\n      <td>-0.967076</td>\n      <td>0.144342</td>\n      <td>-0.292384</td>\n      <td>Normal</td>\n    </tr>\n  </tbody>\n</table>\n<p>4090530 rows √ó 7 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_df.info()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:20:33.539569Z","iopub.execute_input":"2023-12-16T12:20:33.540536Z","iopub.status.idle":"2023-12-16T12:20:33.550554Z","shell.execute_reply.started":"2023-12-16T12:20:33.540492Z","shell.execute_reply":"2023-12-16T12:20:33.549485Z"},"trusted":true},"execution_count":222,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4090530 entries, 0 to 4090529\nData columns (total 7 columns):\n #   Column      Dtype  \n---  ------      -----  \n 0   Visit       int64  \n 1   Medication  int64  \n 2   Time        int64  \n 3   AccV        float64\n 4   AccML       float64\n 5   AccAP       float64\n 6   event       object \ndtypes: float64(3), int64(3), object(1)\nmemory usage: 249.7+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"#pip install -U imbalanced-learn","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:18:56.247483Z","iopub.execute_input":"2023-12-16T12:18:56.248276Z","iopub.status.idle":"2023-12-16T12:18:56.252644Z","shell.execute_reply.started":"2023-12-16T12:18:56.248234Z","shell.execute_reply":"2023-12-16T12:18:56.251481Z"},"trusted":true},"execution_count":209,"outputs":[]},{"cell_type":"code","source":"from sklearn.utils import resample\n\n# Assuming your dataframe is named 'train_df'\n\n# Define the target distribution for sampling\ntarget_distribution = {'Normal': 150000, 'Turn': 150000}\n\n# For the target classes, sample 150,000 records\nfor event_class in ['Normal', 'Turn']:\n    class_data = train_df[train_df['event'].str.strip() == event_class.strip()]\n    if len(class_data) > target_distribution.get(event_class, 0):\n        # Downsample the majority class\n        downsampled_data = resample(class_data, replace=False, n_samples=target_distribution[event_class], random_state=42)\n        train_df = train_df[~(train_df['event'].str.strip() == event_class.strip())]\n        train_df = pd.concat([train_df, downsampled_data])\n\n# Now, 'train_df' contains 150,000 records for the classes 'Normal' and 'Turn'\n","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:28:07.082317Z","iopub.execute_input":"2023-12-16T12:28:07.082754Z","iopub.status.idle":"2023-12-16T12:28:07.809705Z","shell.execute_reply.started":"2023-12-16T12:28:07.08271Z","shell.execute_reply":"2023-12-16T12:28:07.808783Z"},"trusted":true},"execution_count":226,"outputs":[]},{"cell_type":"code","source":"train_df['event'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:28:12.032543Z","iopub.execute_input":"2023-12-16T12:28:12.033506Z","iopub.status.idle":"2023-12-16T12:28:12.121861Z","shell.execute_reply.started":"2023-12-16T12:28:12.033461Z","shell.execute_reply":"2023-12-16T12:28:12.120626Z"},"trusted":true},"execution_count":228,"outputs":[{"execution_count":228,"output_type":"execute_result","data":{"text/plain":"Normal             150000\nTurn               150000\nWalking             98518\nStartHesitation       500\nName: event, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train_df['event'] = le.fit_transform(train_df['event'])","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:31:33.899434Z","iopub.execute_input":"2023-12-16T12:31:33.900392Z","iopub.status.idle":"2023-12-16T12:31:34.120804Z","shell.execute_reply.started":"2023-12-16T12:31:33.900347Z","shell.execute_reply":"2023-12-16T12:31:34.119697Z"},"trusted":true},"execution_count":230,"outputs":[]},{"cell_type":"code","source":"X = train_df.drop(['event'], axis=1)\ny = train_df['event']","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:32:02.284256Z","iopub.execute_input":"2023-12-16T12:32:02.28514Z","iopub.status.idle":"2023-12-16T12:32:02.299188Z","shell.execute_reply.started":"2023-12-16T12:32:02.2851Z","shell.execute_reply":"2023-12-16T12:32:02.298343Z"},"trusted":true},"execution_count":232,"outputs":[]},{"cell_type":"code","source":"y.value_counts()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:32:48.291834Z","iopub.execute_input":"2023-12-16T12:32:48.292629Z","iopub.status.idle":"2023-12-16T12:32:48.305203Z","shell.execute_reply.started":"2023-12-16T12:32:48.292585Z","shell.execute_reply":"2023-12-16T12:32:48.303913Z"},"trusted":true},"execution_count":237,"outputs":[{"execution_count":237,"output_type":"execute_result","data":{"text/plain":"0    150000\n2    150000\n3     98518\n1       500\nName: event, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"from imblearn.over_sampling import SMOTE\n\n# Split the dataset into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Check class distribution before applying SMOTE\nprint(\"Class distribution before SMOTE:\")\nprint(y_train.value_counts())\n\n# Find the size of the majority class (Class 0)\nmajority_class_size = y_train.value_counts().max()\n\n# Apply SMOTE to the training data with sampling_strategy set to the desired ratio\nsmote = SMOTE(sampling_strategy={1: majority_class_size, 2: majority_class_size, 3: majority_class_size})\nX_train_resampled, y_train_resampled = smote.fit_resample(X_train, y_train)\n\n# Check class distribution after applying SMOTE\nprint(\"\\nClass distribution after SMOTE:\")\nprint(pd.Series(y_train_resampled).value_counts())","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:32:29.787904Z","iopub.execute_input":"2023-12-16T12:32:29.788686Z","iopub.status.idle":"2023-12-16T12:32:30.243278Z","shell.execute_reply.started":"2023-12-16T12:32:29.78864Z","shell.execute_reply":"2023-12-16T12:32:30.242198Z"},"trusted":true},"execution_count":236,"outputs":[{"name":"stdout","text":"Class distribution before SMOTE:\n2    105176\n0    104785\n3     68999\n1       352\nName: event, dtype: int64\n\nClass distribution after SMOTE:\n3    105176\n2    105176\n1    105176\n0    104785\nName: event, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"y_train_resampled.shape","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:35:12.313624Z","iopub.execute_input":"2023-12-16T12:35:12.314422Z","iopub.status.idle":"2023-12-16T12:35:12.320836Z","shell.execute_reply.started":"2023-12-16T12:35:12.314381Z","shell.execute_reply":"2023-12-16T12:35:12.319698Z"},"trusted":true},"execution_count":245,"outputs":[{"execution_count":245,"output_type":"execute_result","data":{"text/plain":"(420313,)"},"metadata":{}}]},{"cell_type":"code","source":"X_train_resampled.shape","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:35:25.870596Z","iopub.execute_input":"2023-12-16T12:35:25.87155Z","iopub.status.idle":"2023-12-16T12:35:25.878796Z","shell.execute_reply.started":"2023-12-16T12:35:25.87149Z","shell.execute_reply":"2023-12-16T12:35:25.877744Z"},"trusted":true},"execution_count":246,"outputs":[{"execution_count":246,"output_type":"execute_result","data":{"text/plain":"(420313, 6)"},"metadata":{}}]},{"cell_type":"code","source":"X_test.shape","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:35:59.973385Z","iopub.execute_input":"2023-12-16T12:35:59.974322Z","iopub.status.idle":"2023-12-16T12:35:59.980449Z","shell.execute_reply.started":"2023-12-16T12:35:59.97428Z","shell.execute_reply":"2023-12-16T12:35:59.979404Z"},"trusted":true},"execution_count":248,"outputs":[{"execution_count":248,"output_type":"execute_result","data":{"text/plain":"(119706, 6)"},"metadata":{}}]},{"cell_type":"code","source":"y_test.shape","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:36:09.859517Z","iopub.execute_input":"2023-12-16T12:36:09.860363Z","iopub.status.idle":"2023-12-16T12:36:09.866959Z","shell.execute_reply.started":"2023-12-16T12:36:09.860321Z","shell.execute_reply":"2023-12-16T12:36:09.865876Z"},"trusted":true},"execution_count":249,"outputs":[{"execution_count":249,"output_type":"execute_result","data":{"text/plain":"(119706,)"},"metadata":{}}]},{"cell_type":"code","source":"y_test.value_counts()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:36:40.685893Z","iopub.execute_input":"2023-12-16T12:36:40.686704Z","iopub.status.idle":"2023-12-16T12:36:40.695431Z","shell.execute_reply.started":"2023-12-16T12:36:40.686665Z","shell.execute_reply":"2023-12-16T12:36:40.694361Z"},"trusted":true},"execution_count":250,"outputs":[{"execution_count":250,"output_type":"execute_result","data":{"text/plain":"0    45215\n2    44824\n3    29519\n1      148\nName: event, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Classifiers**","metadata":{}},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.neighbors import KNeighborsClassifier","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:37:38.22166Z","iopub.execute_input":"2023-12-16T12:37:38.222742Z","iopub.status.idle":"2023-12-16T12:37:38.227875Z","shell.execute_reply.started":"2023-12-16T12:37:38.222698Z","shell.execute_reply":"2023-12-16T12:37:38.226813Z"},"trusted":true},"execution_count":252,"outputs":[]},{"cell_type":"code","source":"# Import the accuracy_score function\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report  ","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:37:39.165199Z","iopub.execute_input":"2023-12-16T12:37:39.166081Z","iopub.status.idle":"2023-12-16T12:37:39.170499Z","shell.execute_reply.started":"2023-12-16T12:37:39.166034Z","shell.execute_reply":"2023-12-16T12:37:39.169388Z"},"trusted":true},"execution_count":253,"outputs":[]},{"cell_type":"code","source":"# Evaluation matrix function\ndef evaluate_metrics(y_true, y_pred):\n    \n    # Calculate metrics\n    accuracy = accuracy_score(y_true, y_pred)\n    conf_matrix = confusion_matrix(y_true, y_pred)\n    classification_rep = classification_report(y_true, y_pred)\n\n    # Print the metrics\n    print(f'Accuracy: {accuracy}')\n    print(f'Confusion Matrix:\\n{conf_matrix}')\n    print(f'Classification Report:\\n{classification_rep}')\n","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:37:41.144564Z","iopub.execute_input":"2023-12-16T12:37:41.145647Z","iopub.status.idle":"2023-12-16T12:37:41.151383Z","shell.execute_reply.started":"2023-12-16T12:37:41.145591Z","shell.execute_reply":"2023-12-16T12:37:41.150404Z"},"trusted":true},"execution_count":254,"outputs":[]},{"cell_type":"markdown","source":"# Random Forest","metadata":{}},{"cell_type":"code","source":"# Random Forest\n\n# Initialize the Random Forest classifier\nrf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)\n\n# Train the classifier\nrf_classifier.fit(X_train_resampled, y_train_resampled)\n\ny_pred = rf_classifier.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:38:14.7935Z","iopub.execute_input":"2023-12-16T12:38:14.794308Z","iopub.status.idle":"2023-12-16T12:39:50.765108Z","shell.execute_reply.started":"2023-12-16T12:38:14.794265Z","shell.execute_reply":"2023-12-16T12:39:50.76415Z"},"trusted":true},"execution_count":255,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:40:04.840527Z","iopub.execute_input":"2023-12-16T12:40:04.84172Z","iopub.status.idle":"2023-12-16T12:40:05.031493Z","shell.execute_reply.started":"2023-12-16T12:40:04.841658Z","shell.execute_reply":"2023-12-16T12:40:05.030458Z"},"trusted":true},"execution_count":257,"outputs":[{"name":"stdout","text":"Accuracy: 0.8985263896546539\nConfusion Matrix:\n[[38219     4  5024  1968]\n [    4   143     0     1]\n [ 3456     3 40714   651]\n [  811     0   225 28483]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.90      0.85      0.87     45215\n           1       0.95      0.97      0.96       148\n           2       0.89      0.91      0.90     44824\n           3       0.92      0.96      0.94     29519\n\n    accuracy                           0.90    119706\n   macro avg       0.91      0.92      0.92    119706\nweighted avg       0.90      0.90      0.90    119706\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Decision Tree","metadata":{}},{"cell_type":"code","source":"# Decision tree classifier\n\n# Initialize the Decision Tree Classifier\nclf = DecisionTreeClassifier(random_state=42)\n\n# Train the classifier\nclf.fit(X_train_resampled, y_train_resampled)\n\n# Make predictions on the test set\ny_pred = clf.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:40:56.328436Z","iopub.execute_input":"2023-12-16T12:40:56.329368Z","iopub.status.idle":"2023-12-16T12:41:00.028247Z","shell.execute_reply.started":"2023-12-16T12:40:56.329327Z","shell.execute_reply":"2023-12-16T12:41:00.0271Z"},"trusted":true},"execution_count":258,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:41:00.030176Z","iopub.execute_input":"2023-12-16T12:41:00.030492Z","iopub.status.idle":"2023-12-16T12:41:00.221215Z","shell.execute_reply.started":"2023-12-16T12:41:00.030462Z","shell.execute_reply":"2023-12-16T12:41:00.220212Z"},"trusted":true},"execution_count":259,"outputs":[{"name":"stdout","text":"Accuracy: 0.9062703623878502\nConfusion Matrix:\n[[39627     3  4423  1162]\n [    6   141     1     0]\n [ 4191     8 40195   430]\n [  704     0   292 28523]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.89      0.88      0.88     45215\n           1       0.93      0.95      0.94       148\n           2       0.89      0.90      0.90     44824\n           3       0.95      0.97      0.96     29519\n\n    accuracy                           0.91    119706\n   macro avg       0.91      0.92      0.92    119706\nweighted avg       0.91      0.91      0.91    119706\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Naive Bayes","metadata":{}},{"cell_type":"code","source":"# Naive Bayes Classifier\n# Initialize the Naive Bayes Classifier\nclf = GaussianNB()\n\n# Train the classifier\nclf.fit(X_train_resampled, y_train_resampled)\n\n# Make predictions on the test set\ny_pred = clf.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:41:29.210373Z","iopub.execute_input":"2023-12-16T12:41:29.210781Z","iopub.status.idle":"2023-12-16T12:41:29.320288Z","shell.execute_reply.started":"2023-12-16T12:41:29.210742Z","shell.execute_reply":"2023-12-16T12:41:29.319147Z"},"trusted":true},"execution_count":260,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:41:34.242905Z","iopub.execute_input":"2023-12-16T12:41:34.243297Z","iopub.status.idle":"2023-12-16T12:41:34.44013Z","shell.execute_reply.started":"2023-12-16T12:41:34.243262Z","shell.execute_reply":"2023-12-16T12:41:34.43909Z"},"trusted":true},"execution_count":262,"outputs":[{"name":"stdout","text":"Accuracy: 0.4024777371226171\nConfusion Matrix:\n[[10908 12424 16069  5814]\n [   27    42    55    24]\n [  939 16059 21055  6771]\n [  902  3792  8651 16174]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.85      0.24      0.38     45215\n           1       0.00      0.28      0.00       148\n           2       0.46      0.47      0.46     44824\n           3       0.56      0.55      0.55     29519\n\n    accuracy                           0.40    119706\n   macro avg       0.47      0.39      0.35    119706\nweighted avg       0.63      0.40      0.45    119706\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# XG Boost","metadata":{}},{"cell_type":"code","source":"# XG boost\n\n# Initialize the XGBoost classifier\nxgb_classifier = XGBClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)\n\n# Train the classifier\nxgb_classifier.fit(X_train_resampled, y_train_resampled)\n\n# Make predictions on the test set\ny_pred = xgb_classifier.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:41:55.379854Z","iopub.execute_input":"2023-12-16T12:41:55.380604Z","iopub.status.idle":"2023-12-16T12:42:44.092479Z","shell.execute_reply.started":"2023-12-16T12:41:55.38053Z","shell.execute_reply":"2023-12-16T12:42:44.091525Z"},"trusted":true},"execution_count":263,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:42:44.094333Z","iopub.execute_input":"2023-12-16T12:42:44.097758Z","iopub.status.idle":"2023-12-16T12:42:44.285934Z","shell.execute_reply.started":"2023-12-16T12:42:44.097717Z","shell.execute_reply":"2023-12-16T12:42:44.284888Z"},"trusted":true},"execution_count":264,"outputs":[{"name":"stdout","text":"Accuracy: 0.7162965933203014\nConfusion Matrix:\n[[26930    64 11928  6293]\n [    3   143     0     2]\n [ 6766   105 35029  2924]\n [ 1935    35  3906 23643]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.76      0.60      0.67     45215\n           1       0.41      0.97      0.58       148\n           2       0.69      0.78      0.73     44824\n           3       0.72      0.80      0.76     29519\n\n    accuracy                           0.72    119706\n   macro avg       0.64      0.79      0.68    119706\nweighted avg       0.72      0.72      0.71    119706\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# LGBM","metadata":{}},{"cell_type":"code","source":"# LGBM\n\n# Initialize the LightGBM classifier\nlgbm_classifier = LGBMClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)\n\n# Train the classifier\nlgbm_classifier.fit(X_train_resampled, y_train_resampled)\n\n# Make predictions on the test set\ny_pred = lgbm_classifier.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:43:09.372519Z","iopub.execute_input":"2023-12-16T12:43:09.373318Z","iopub.status.idle":"2023-12-16T12:43:14.975609Z","shell.execute_reply.started":"2023-12-16T12:43:09.373274Z","shell.execute_reply":"2023-12-16T12:43:14.974641Z"},"trusted":true},"execution_count":265,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:43:14.977592Z","iopub.execute_input":"2023-12-16T12:43:14.97825Z","iopub.status.idle":"2023-12-16T12:43:15.169375Z","shell.execute_reply.started":"2023-12-16T12:43:14.978208Z","shell.execute_reply":"2023-12-16T12:43:15.168306Z"},"trusted":true},"execution_count":266,"outputs":[{"name":"stdout","text":"Accuracy: 0.7361118072611231\nConfusion Matrix:\n[[27646   278 10808  6483]\n [    1   146     1     0]\n [ 6078   157 35834  2755]\n [ 2193     2  2833 24491]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.77      0.61      0.68     45215\n           1       0.25      0.99      0.40       148\n           2       0.72      0.80      0.76     44824\n           3       0.73      0.83      0.77     29519\n\n    accuracy                           0.74    119706\n   macro avg       0.62      0.81      0.65    119706\nweighted avg       0.74      0.74      0.73    119706\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# KNN","metadata":{}},{"cell_type":"code","source":"# KNN\n\n# Initialize the KNN classifier\nknn_classifier = KNeighborsClassifier(n_neighbors=5)  # You can adjust the number of neighbors (n_neighbors) based on your preference\n\n# Train the classifier\nknn_classifier.fit(X_train_resampled, y_train_resampled)\n\n# Make predictions on the test set\ny_pred = knn_classifier.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:44:58.002275Z","iopub.execute_input":"2023-12-16T12:44:58.002845Z","iopub.status.idle":"2023-12-16T12:45:02.635927Z","shell.execute_reply.started":"2023-12-16T12:44:58.002801Z","shell.execute_reply":"2023-12-16T12:45:02.634906Z"},"trusted":true},"execution_count":277,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:45:02.637874Z","iopub.execute_input":"2023-12-16T12:45:02.638231Z","iopub.status.idle":"2023-12-16T12:45:02.834692Z","shell.execute_reply.started":"2023-12-16T12:45:02.638196Z","shell.execute_reply":"2023-12-16T12:45:02.833648Z"},"trusted":true},"execution_count":278,"outputs":[{"name":"stdout","text":"Accuracy: 0.6284396772091625\nConfusion Matrix:\n[[23801    78 15073  6263]\n [    2   146     0     0]\n [11077    78 27371  6298]\n [ 2496    25  3088 23910]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.64      0.53      0.58     45215\n           1       0.45      0.99      0.61       148\n           2       0.60      0.61      0.61     44824\n           3       0.66      0.81      0.72     29519\n\n    accuracy                           0.63    119706\n   macro avg       0.59      0.73      0.63    119706\nweighted avg       0.63      0.63      0.62    119706\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Test dataset (for submission)","metadata":{}},{"cell_type":"code","source":"test_defog_path = '/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/test/defog/02ab235146.csv'\ntest_defog = pd.read_csv(test_defog_path)\nname = os.path.basename(test_defog_path)\nid_value = name.split('.')[0]\ntest_defog['Id_value'] = id_value\ntest_defog['Id'] = test_defog['Id_value'].astype(str) + '_' + test_defog['Time'].astype(str)\ntest_defog = test_defog[['Id','AccV','AccML','AccAP']]\ntest_defog.set_index('Id',inplace=True)","metadata":{"execution":{"iopub.status.busy":"2023-12-15T10:25:40.70115Z","iopub.execute_input":"2023-12-15T10:25:40.702073Z","iopub.status.idle":"2023-12-15T10:25:41.298798Z","shell.execute_reply.started":"2023-12-15T10:25:40.702037Z","shell.execute_reply":"2023-12-15T10:25:41.297692Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"code","source":"# predict event probability\ntest_defog_pred=xgb_classifier.predict(test_defog)\ntest_defog['event'] = test_defog_pred","metadata":{"execution":{"iopub.status.busy":"2023-12-15T10:25:41.368132Z","iopub.execute_input":"2023-12-15T10:25:41.369079Z","iopub.status.idle":"2023-12-15T10:25:41.778354Z","shell.execute_reply.started":"2023-12-15T10:25:41.369042Z","shell.execute_reply":"2023-12-15T10:25:41.777352Z"},"trusted":true},"execution_count":57,"outputs":[]},{"cell_type":"code","source":"test_defog","metadata":{"execution":{"iopub.status.busy":"2023-12-15T10:25:47.842868Z","iopub.execute_input":"2023-12-15T10:25:47.843307Z","iopub.status.idle":"2023-12-15T10:25:47.859188Z","shell.execute_reply.started":"2023-12-15T10:25:47.843272Z","shell.execute_reply":"2023-12-15T10:25:47.857947Z"},"trusted":true},"execution_count":58,"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"                       AccV     AccML     AccAP  event\nId                                                    \n02ab235146_0      -0.914652 -0.300851  0.298156      0\n02ab235146_1      -0.914367 -0.301572  0.298325      0\n02ab235146_2      -0.779540 -0.343197  0.275690      0\n02ab235146_3      -0.993162 -0.270281  0.315775      0\n02ab235146_4      -0.948767 -0.307849  0.297191      0\n...                     ...       ...       ...    ...\n02ab235146_281683 -0.899299 -0.232668  0.389147      0\n02ab235146_281684 -0.901973 -0.233051  0.390114      0\n02ab235146_281685 -0.901690 -0.231888  0.391896      0\n02ab235146_281686 -0.899576 -0.232429  0.391106      0\n02ab235146_281687 -0.900289 -0.232363  0.390735      0\n\n[281688 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n      <th>event</th>\n    </tr>\n    <tr>\n      <th>Id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>02ab235146_0</th>\n      <td>-0.914652</td>\n      <td>-0.300851</td>\n      <td>0.298156</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_1</th>\n      <td>-0.914367</td>\n      <td>-0.301572</td>\n      <td>0.298325</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_2</th>\n      <td>-0.779540</td>\n      <td>-0.343197</td>\n      <td>0.275690</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_3</th>\n      <td>-0.993162</td>\n      <td>-0.270281</td>\n      <td>0.315775</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_4</th>\n      <td>-0.948767</td>\n      <td>-0.307849</td>\n      <td>0.297191</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281683</th>\n      <td>-0.899299</td>\n      <td>-0.232668</td>\n      <td>0.389147</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281684</th>\n      <td>-0.901973</td>\n      <td>-0.233051</td>\n      <td>0.390114</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281685</th>\n      <td>-0.901690</td>\n      <td>-0.231888</td>\n      <td>0.391896</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281686</th>\n      <td>-0.899576</td>\n      <td>-0.232429</td>\n      <td>0.391106</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281687</th>\n      <td>-0.900289</td>\n      <td>-0.232363</td>\n      <td>0.390735</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>281688 rows √ó 4 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# expand event column it to three columns\ntest_defog['StartHesitation'] = np.where(test_defog['event']==1, 1, 0)\ntest_defog['Turn'] = np.where(test_defog['event']==2, 1, 0)\ntest_defog['Walking'] = np.where(test_defog['event']==3, 1, 0)","metadata":{"execution":{"iopub.status.busy":"2023-12-15T10:25:56.113531Z","iopub.execute_input":"2023-12-15T10:25:56.11472Z","iopub.status.idle":"2023-12-15T10:25:56.126693Z","shell.execute_reply.started":"2023-12-15T10:25:56.114656Z","shell.execute_reply":"2023-12-15T10:25:56.125583Z"},"trusted":true},"execution_count":59,"outputs":[]},{"cell_type":"code","source":"test_defog","metadata":{"execution":{"iopub.status.busy":"2023-12-15T10:25:57.137112Z","iopub.execute_input":"2023-12-15T10:25:57.138298Z","iopub.status.idle":"2023-12-15T10:25:57.156074Z","shell.execute_reply.started":"2023-12-15T10:25:57.138256Z","shell.execute_reply":"2023-12-15T10:25:57.15499Z"},"trusted":true},"execution_count":60,"outputs":[{"execution_count":60,"output_type":"execute_result","data":{"text/plain":"                       AccV     AccML     AccAP  event  StartHesitation  Turn  \\\nId                                                                              \n02ab235146_0      -0.914652 -0.300851  0.298156      0                0     0   \n02ab235146_1      -0.914367 -0.301572  0.298325      0                0     0   \n02ab235146_2      -0.779540 -0.343197  0.275690      0                0     0   \n02ab235146_3      -0.993162 -0.270281  0.315775      0                0     0   \n02ab235146_4      -0.948767 -0.307849  0.297191      0                0     0   \n...                     ...       ...       ...    ...              ...   ...   \n02ab235146_281683 -0.899299 -0.232668  0.389147      0                0     0   \n02ab235146_281684 -0.901973 -0.233051  0.390114      0                0     0   \n02ab235146_281685 -0.901690 -0.231888  0.391896      0                0     0   \n02ab235146_281686 -0.899576 -0.232429  0.391106      0                0     0   \n02ab235146_281687 -0.900289 -0.232363  0.390735      0                0     0   \n\n                   Walking  \nId                          \n02ab235146_0             0  \n02ab235146_1             0  \n02ab235146_2             0  \n02ab235146_3             0  \n02ab235146_4             0  \n...                    ...  \n02ab235146_281683        0  \n02ab235146_281684        0  \n02ab235146_281685        0  \n02ab235146_281686        0  \n02ab235146_281687        0  \n\n[281688 rows x 7 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n      <th>event</th>\n      <th>StartHesitation</th>\n      <th>Turn</th>\n      <th>Walking</th>\n    </tr>\n    <tr>\n      <th>Id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>02ab235146_0</th>\n      <td>-0.914652</td>\n      <td>-0.300851</td>\n      <td>0.298156</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_1</th>\n      <td>-0.914367</td>\n      <td>-0.301572</td>\n      <td>0.298325</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_2</th>\n      <td>-0.779540</td>\n      <td>-0.343197</td>\n      <td>0.275690</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_3</th>\n      <td>-0.993162</td>\n      <td>-0.270281</td>\n      <td>0.315775</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_4</th>\n      <td>-0.948767</td>\n      <td>-0.307849</td>\n      <td>0.297191</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281683</th>\n      <td>-0.899299</td>\n      <td>-0.232668</td>\n      <td>0.389147</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281684</th>\n      <td>-0.901973</td>\n      <td>-0.233051</td>\n      <td>0.390114</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281685</th>\n      <td>-0.901690</td>\n      <td>-0.231888</td>\n      <td>0.391896</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281686</th>\n      <td>-0.899576</td>\n      <td>-0.232429</td>\n      <td>0.391106</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>02ab235146_281687</th>\n      <td>-0.900289</td>\n      <td>-0.232363</td>\n      <td>0.390735</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>281688 rows √ó 7 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"print(test_defog['event'].value_counts(),'\\n')\nprint(test_defog['StartHesitation'].value_counts(),'\\n')\nprint(test_defog['Turn'].value_counts(),'\\n')\nprint(test_defog['Walking'].value_counts(),'\\n')","metadata":{"execution":{"iopub.status.busy":"2023-12-15T10:26:01.170992Z","iopub.execute_input":"2023-12-15T10:26:01.172077Z","iopub.status.idle":"2023-12-15T10:26:01.189994Z","shell.execute_reply.started":"2023-12-15T10:26:01.172034Z","shell.execute_reply":"2023-12-15T10:26:01.188899Z"},"trusted":true},"execution_count":61,"outputs":[{"name":"stdout","text":"0    145938\n3     86387\n2     39415\n1      9948\nName: event, dtype: int64 \n\n0    271740\n1      9948\nName: StartHesitation, dtype: int64 \n\n0    242273\n1     39415\nName: Turn, dtype: int64 \n\n0    195301\n1     86387\nName: Walking, dtype: int64 \n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## **TDCSFOGü•º**","metadata":{}},{"cell_type":"code","source":"DATA_ROOT_TDCSFOG = '/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/train/tdcsfog/'\ntdcsfog = pd.DataFrame()\nfor root, dirs, files in os.walk(DATA_ROOT_TDCSFOG):\n    for name in files:       \n        f = os.path.join(root, name)\n        df_list= pd.read_csv(f)\n        words = name.split('.')[0]\n        df_list['file']= name.split('.')[0]\n        tdcsfog = pd.concat([tdcsfog, df_list], axis=0)\ntdcsfog","metadata":{"execution":{"iopub.status.busy":"2023-12-16T10:52:54.233064Z","iopub.execute_input":"2023-12-16T10:52:54.234223Z","iopub.status.idle":"2023-12-16T10:55:13.686799Z","shell.execute_reply.started":"2023-12-16T10:52:54.234168Z","shell.execute_reply":"2023-12-16T10:55:13.685632Z"},"trusted":true},"execution_count":93,"outputs":[{"execution_count":93,"output_type":"execute_result","data":{"text/plain":"      Time      AccV     AccML     AccAP  StartHesitation  Turn  Walking  \\\n0        0 -9.665890  0.042550  0.184744                0     0        0   \n1        1 -9.672969  0.049217  0.184644                0     0        0   \n2        2 -9.670260  0.033620  0.193790                0     0        0   \n3        3 -9.673356  0.035159  0.184369                0     0        0   \n4        4 -9.671458  0.043913  0.197814                0     0        0   \n...    ...       ...       ...       ...              ...   ...      ...   \n5153  5153 -9.915920 -0.105897 -1.123455                0     0        0   \n5154  5154 -9.693752 -0.066892 -1.114903                0     0        0   \n5155  5155 -9.548118 -0.098315 -1.112123                0     0        0   \n5156  5156 -9.469803 -0.111004 -1.130814                0     0        0   \n5157  5157 -9.566318 -0.113865 -1.103353                0     0        0   \n\n            file  \n0     a171e61840  \n1     a171e61840  \n2     a171e61840  \n3     a171e61840  \n4     a171e61840  \n...          ...  \n5153  0506d9a39f  \n5154  0506d9a39f  \n5155  0506d9a39f  \n5156  0506d9a39f  \n5157  0506d9a39f  \n\n[7062672 rows x 8 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Time</th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n      <th>StartHesitation</th>\n      <th>Turn</th>\n      <th>Walking</th>\n      <th>file</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>-9.665890</td>\n      <td>0.042550</td>\n      <td>0.184744</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>a171e61840</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>-9.672969</td>\n      <td>0.049217</td>\n      <td>0.184644</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>a171e61840</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>-9.670260</td>\n      <td>0.033620</td>\n      <td>0.193790</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>a171e61840</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>-9.673356</td>\n      <td>0.035159</td>\n      <td>0.184369</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>a171e61840</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>-9.671458</td>\n      <td>0.043913</td>\n      <td>0.197814</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>a171e61840</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>5153</th>\n      <td>5153</td>\n      <td>-9.915920</td>\n      <td>-0.105897</td>\n      <td>-1.123455</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0506d9a39f</td>\n    </tr>\n    <tr>\n      <th>5154</th>\n      <td>5154</td>\n      <td>-9.693752</td>\n      <td>-0.066892</td>\n      <td>-1.114903</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0506d9a39f</td>\n    </tr>\n    <tr>\n      <th>5155</th>\n      <td>5155</td>\n      <td>-9.548118</td>\n      <td>-0.098315</td>\n      <td>-1.112123</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0506d9a39f</td>\n    </tr>\n    <tr>\n      <th>5156</th>\n      <td>5156</td>\n      <td>-9.469803</td>\n      <td>-0.111004</td>\n      <td>-1.130814</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0506d9a39f</td>\n    </tr>\n    <tr>\n      <th>5157</th>\n      <td>5157</td>\n      <td>-9.566318</td>\n      <td>-0.113865</td>\n      <td>-1.103353</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0506d9a39f</td>\n    </tr>\n  </tbody>\n</table>\n<p>7062672 rows √ó 8 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"##  Combining it with ü•ºtdcsfog-metadata.","metadata":{"execution":{"iopub.status.busy":"2023-12-15T08:43:53.28317Z","iopub.execute_input":"2023-12-15T08:43:53.283491Z","iopub.status.idle":"2023-12-15T08:43:53.288041Z","shell.execute_reply.started":"2023-12-15T08:43:53.283461Z","shell.execute_reply":"2023-12-15T08:43:53.28709Z"}}},{"cell_type":"code","source":"tdcsfog_metadata = pd.read_csv(\"/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/tdcsfog_metadata.csv\")\ntdcsfog_metadata","metadata":{"execution":{"iopub.status.busy":"2023-12-16T10:55:13.688971Z","iopub.execute_input":"2023-12-16T10:55:13.689784Z","iopub.status.idle":"2023-12-16T10:55:13.711837Z","shell.execute_reply.started":"2023-12-16T10:55:13.689737Z","shell.execute_reply":"2023-12-16T10:55:13.710826Z"},"trusted":true},"execution_count":94,"outputs":[{"execution_count":94,"output_type":"execute_result","data":{"text/plain":"             Id Subject  Visit  Test Medication\n0    003f117e14  4dc2f8      3     2         on\n1    009ee11563  f62eec      4     2         on\n2    011322847a  231c3b      2     2         on\n3    01d0fe7266  231c3b      2     1        off\n4    024418ba39  fa8764     19     3         on\n..          ...     ...    ...   ...        ...\n828  feba449e1a  312788     19     1         on\n829  ff4f844fd3  af82b2      2     3         on\n830  ff53514514  3b2403      2     3         on\n831  ff92d9244d  2d57c2     20     2         on\n832  ffda8fadfd  7fcee9     20     1        off\n\n[833 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>Subject</th>\n      <th>Visit</th>\n      <th>Test</th>\n      <th>Medication</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>003f117e14</td>\n      <td>4dc2f8</td>\n      <td>3</td>\n      <td>2</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>009ee11563</td>\n      <td>f62eec</td>\n      <td>4</td>\n      <td>2</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>011322847a</td>\n      <td>231c3b</td>\n      <td>2</td>\n      <td>2</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>01d0fe7266</td>\n      <td>231c3b</td>\n      <td>2</td>\n      <td>1</td>\n      <td>off</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>024418ba39</td>\n      <td>fa8764</td>\n      <td>19</td>\n      <td>3</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>828</th>\n      <td>feba449e1a</td>\n      <td>312788</td>\n      <td>19</td>\n      <td>1</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>829</th>\n      <td>ff4f844fd3</td>\n      <td>af82b2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>830</th>\n      <td>ff53514514</td>\n      <td>3b2403</td>\n      <td>2</td>\n      <td>3</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>831</th>\n      <td>ff92d9244d</td>\n      <td>2d57c2</td>\n      <td>20</td>\n      <td>2</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>832</th>\n      <td>ffda8fadfd</td>\n      <td>7fcee9</td>\n      <td>20</td>\n      <td>1</td>\n      <td>off</td>\n    </tr>\n  </tbody>\n</table>\n<p>833 rows √ó 5 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"tdcsfog_m= tdcsfog_metadata.merge(tdcsfog, how = 'inner', left_on = 'Id', right_on = 'file')\ntdcsfog_m.drop(['file'], axis = 1, inplace = True)\ntdcsfog_m","metadata":{"execution":{"iopub.status.busy":"2023-12-16T12:57:41.082803Z","iopub.execute_input":"2023-12-16T12:57:41.083592Z","iopub.status.idle":"2023-12-16T12:57:44.852078Z","shell.execute_reply.started":"2023-12-16T12:57:41.083542Z","shell.execute_reply":"2023-12-16T12:57:44.851052Z"},"trusted":true},"execution_count":284,"outputs":[{"execution_count":284,"output_type":"execute_result","data":{"text/plain":"                 Id Subject  Visit  Test Medication  Time      AccV     AccML  \\\n0        003f117e14  4dc2f8      3     2         on     0 -9.533939  0.566322   \n1        003f117e14  4dc2f8      3     2         on     1 -9.536140  0.564137   \n2        003f117e14  4dc2f8      3     2         on     2 -9.529345  0.561765   \n3        003f117e14  4dc2f8      3     2         on     3 -9.531239  0.564227   \n4        003f117e14  4dc2f8      3     2         on     4 -9.540825  0.561854   \n...             ...     ...    ...   ...        ...   ...       ...       ...   \n7062667  ffda8fadfd  7fcee9     20     1        off  4220 -9.403467  0.089003   \n7062668  ffda8fadfd  7fcee9     20     1        off  4221 -9.404246  0.090531   \n7062669  ffda8fadfd  7fcee9     20     1        off  4222 -9.405770  0.084380   \n7062670  ffda8fadfd  7fcee9     20     1        off  4223 -9.403579  0.084236   \n7062671  ffda8fadfd  7fcee9     20     1        off  4224 -9.405036  0.082027   \n\n            AccAP  StartHesitation  Turn  Walking  \n0       -1.413525                0     0        0  \n1       -1.440621                0     0        0  \n2       -1.429332                0     0        0  \n3       -1.415490                0     0        0  \n4       -1.429471                0     0        0  \n...           ...              ...   ...      ...  \n7062667 -3.220304                0     0        0  \n7062668 -3.216584                0     0        0  \n7062669 -3.224039                0     0        0  \n7062670 -3.236686                0     0        0  \n7062671 -3.234458                0     0        0  \n\n[7062672 rows x 12 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>Subject</th>\n      <th>Visit</th>\n      <th>Test</th>\n      <th>Medication</th>\n      <th>Time</th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n      <th>StartHesitation</th>\n      <th>Turn</th>\n      <th>Walking</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>003f117e14</td>\n      <td>4dc2f8</td>\n      <td>3</td>\n      <td>2</td>\n      <td>on</td>\n      <td>0</td>\n      <td>-9.533939</td>\n      <td>0.566322</td>\n      <td>-1.413525</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>003f117e14</td>\n      <td>4dc2f8</td>\n      <td>3</td>\n      <td>2</td>\n      <td>on</td>\n      <td>1</td>\n      <td>-9.536140</td>\n      <td>0.564137</td>\n      <td>-1.440621</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>003f117e14</td>\n      <td>4dc2f8</td>\n      <td>3</td>\n      <td>2</td>\n      <td>on</td>\n      <td>2</td>\n      <td>-9.529345</td>\n      <td>0.561765</td>\n      <td>-1.429332</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>003f117e14</td>\n      <td>4dc2f8</td>\n      <td>3</td>\n      <td>2</td>\n      <td>on</td>\n      <td>3</td>\n      <td>-9.531239</td>\n      <td>0.564227</td>\n      <td>-1.415490</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>003f117e14</td>\n      <td>4dc2f8</td>\n      <td>3</td>\n      <td>2</td>\n      <td>on</td>\n      <td>4</td>\n      <td>-9.540825</td>\n      <td>0.561854</td>\n      <td>-1.429471</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7062667</th>\n      <td>ffda8fadfd</td>\n      <td>7fcee9</td>\n      <td>20</td>\n      <td>1</td>\n      <td>off</td>\n      <td>4220</td>\n      <td>-9.403467</td>\n      <td>0.089003</td>\n      <td>-3.220304</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7062668</th>\n      <td>ffda8fadfd</td>\n      <td>7fcee9</td>\n      <td>20</td>\n      <td>1</td>\n      <td>off</td>\n      <td>4221</td>\n      <td>-9.404246</td>\n      <td>0.090531</td>\n      <td>-3.216584</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7062669</th>\n      <td>ffda8fadfd</td>\n      <td>7fcee9</td>\n      <td>20</td>\n      <td>1</td>\n      <td>off</td>\n      <td>4222</td>\n      <td>-9.405770</td>\n      <td>0.084380</td>\n      <td>-3.224039</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7062670</th>\n      <td>ffda8fadfd</td>\n      <td>7fcee9</td>\n      <td>20</td>\n      <td>1</td>\n      <td>off</td>\n      <td>4223</td>\n      <td>-9.403579</td>\n      <td>0.084236</td>\n      <td>-3.236686</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7062671</th>\n      <td>ffda8fadfd</td>\n      <td>7fcee9</td>\n      <td>20</td>\n      <td>1</td>\n      <td>off</td>\n      <td>4224</td>\n      <td>-9.405036</td>\n      <td>0.082027</td>\n      <td>-3.234458</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>7062672 rows √ó 12 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"summary(tdcsfog_m)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:00:35.125977Z","iopub.execute_input":"2023-12-16T13:00:35.126932Z","iopub.status.idle":"2023-12-16T13:00:51.200025Z","shell.execute_reply.started":"2023-12-16T13:00:35.126888Z","shell.execute_reply":"2023-12-16T13:00:51.198874Z"},"trusted":true},"execution_count":289,"outputs":[{"name":"stdout","text":"data shape: (7062672, 12)\n","output_type":"stream"},{"execution_count":289,"output_type":"execute_result","data":{"text/plain":"                data type  #missing  %missing  #unique        min        max  \\\nId                 object         0       0.0      833        NaN        NaN   \nSubject            object         0       0.0       62        NaN        NaN   \nVisit               int64         0       0.0        7        2.0       20.0   \nTest                int64         0       0.0        3        1.0        3.0   \nMedication         object         0       0.0        2        NaN        NaN   \nTime                int64         0       0.0    97077        0.0    97076.0   \nAccV              float64         0       0.0  7027490 -35.521119  20.906953   \nAccML             float64         0       0.0  7030366 -26.164398  27.484719   \nAccAP             float64         0       0.0  7028071 -47.829639  30.337694   \nStartHesitation     int64         0       0.0        2        0.0        1.0   \nTurn                int64         0       0.0        2        0.0        1.0   \nWalking             int64         0       0.0        2        0.0        1.0   \n\n                first value second value third value  \nId               003f117e14   003f117e14  003f117e14  \nSubject              4dc2f8       4dc2f8      4dc2f8  \nVisit                     3            3           3  \nTest                      2            2           2  \nMedication               on           on          on  \nTime                      0            1           2  \nAccV              -9.533939     -9.53614   -9.529345  \nAccML              0.566322     0.564137    0.561765  \nAccAP             -1.413525    -1.440621   -1.429332  \nStartHesitation           0            0           0  \nTurn                      0            0           0  \nWalking                   0            0           0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data type</th>\n      <th>#missing</th>\n      <th>%missing</th>\n      <th>#unique</th>\n      <th>min</th>\n      <th>max</th>\n      <th>first value</th>\n      <th>second value</th>\n      <th>third value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Id</th>\n      <td>object</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>833</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>003f117e14</td>\n      <td>003f117e14</td>\n      <td>003f117e14</td>\n    </tr>\n    <tr>\n      <th>Subject</th>\n      <td>object</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>62</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4dc2f8</td>\n      <td>4dc2f8</td>\n      <td>4dc2f8</td>\n    </tr>\n    <tr>\n      <th>Visit</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7</td>\n      <td>2.0</td>\n      <td>20.0</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>Test</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Medication</th>\n      <td>object</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>on</td>\n      <td>on</td>\n      <td>on</td>\n    </tr>\n    <tr>\n      <th>Time</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>97077</td>\n      <td>0.0</td>\n      <td>97076.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>AccV</th>\n      <td>float64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7027490</td>\n      <td>-35.521119</td>\n      <td>20.906953</td>\n      <td>-9.533939</td>\n      <td>-9.53614</td>\n      <td>-9.529345</td>\n    </tr>\n    <tr>\n      <th>AccML</th>\n      <td>float64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7030366</td>\n      <td>-26.164398</td>\n      <td>27.484719</td>\n      <td>0.566322</td>\n      <td>0.564137</td>\n      <td>0.561765</td>\n    </tr>\n    <tr>\n      <th>AccAP</th>\n      <td>float64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7028071</td>\n      <td>-47.829639</td>\n      <td>30.337694</td>\n      <td>-1.413525</td>\n      <td>-1.440621</td>\n      <td>-1.429332</td>\n    </tr>\n    <tr>\n      <th>StartHesitation</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Turn</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Walking</th>\n      <td>int64</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# garbage collection for memory\nimport gc\ngc.collect()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:00:54.100086Z","iopub.execute_input":"2023-12-16T13:00:54.100916Z","iopub.status.idle":"2023-12-16T13:00:54.436314Z","shell.execute_reply.started":"2023-12-16T13:00:54.100875Z","shell.execute_reply":"2023-12-16T13:00:54.435256Z"},"trusted":true},"execution_count":290,"outputs":[{"execution_count":290,"output_type":"execute_result","data":{"text/plain":"23"},"metadata":{}}]},{"cell_type":"markdown","source":"# Feature engineering and modeling (tdcsDEFOG)ü•º","metadata":{}},{"cell_type":"code","source":"conditions = [\n    (tdcsfog_m['StartHesitation'] == 1),\n    (tdcsfog_m['Turn'] == 1),\n    (tdcsfog_m['Walking'] == 1)]\nchoices = ['StartHesitation', 'Turn', 'Walking']\ntdcsfog_m['event'] = np.select(conditions, choices, default='Normal')","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:01:04.228464Z","iopub.execute_input":"2023-12-16T13:01:04.229521Z","iopub.status.idle":"2023-12-16T13:01:05.605922Z","shell.execute_reply.started":"2023-12-16T13:01:04.229465Z","shell.execute_reply":"2023-12-16T13:01:05.605012Z"},"trusted":true},"execution_count":291,"outputs":[]},{"cell_type":"code","source":"tdcsfog_m['event'].value_counts().to_frame().style.background_gradient()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:01:08.015051Z","iopub.execute_input":"2023-12-16T13:01:08.015867Z","iopub.status.idle":"2023-12-16T13:01:09.322787Z","shell.execute_reply.started":"2023-12-16T13:01:08.015826Z","shell.execute_reply":"2023-12-16T13:01:09.321628Z"},"trusted":true},"execution_count":292,"outputs":[{"execution_count":292,"output_type":"execute_result","data":{"text/plain":"<pandas.io.formats.style.Styler at 0x79802420d950>","text/html":"<style type=\"text/css\">\n#T_e1ec7_row0_col0 {\n  background-color: #023858;\n  color: #f1f1f1;\n}\n#T_e1ec7_row1_col0 {\n  background-color: #bbc7e0;\n  color: #000000;\n}\n#T_e1ec7_row2_col0 {\n  background-color: #fcf4fa;\n  color: #000000;\n}\n#T_e1ec7_row3_col0 {\n  background-color: #fff7fb;\n  color: #000000;\n}\n</style>\n<table id=\"T_e1ec7_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >event</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_e1ec7_level0_row0\" class=\"row_heading level0 row0\" >Normal</th>\n      <td id=\"T_e1ec7_row0_col0\" class=\"data row0 col0\" >4871262</td>\n    </tr>\n    <tr>\n      <th id=\"T_e1ec7_level0_row1\" class=\"row_heading level0 row1\" >Turn</th>\n      <td id=\"T_e1ec7_row1_col0\" class=\"data row1 col0\" >1678782</td>\n    </tr>\n    <tr>\n      <th id=\"T_e1ec7_level0_row2\" class=\"row_heading level0 row2\" >StartHesitation</th>\n      <td id=\"T_e1ec7_row2_col0\" class=\"data row2 col0\" >304790</td>\n    </tr>\n    <tr>\n      <th id=\"T_e1ec7_level0_row3\" class=\"row_heading level0 row3\" >Walking</th>\n      <td id=\"T_e1ec7_row3_col0\" class=\"data row3 col0\" >207838</td>\n    </tr>\n  </tbody>\n</table>\n"},"metadata":{}}]},{"cell_type":"code","source":"train_df = tdcsfog_m[['Visit','Medication','Time','AccV','AccML','AccAP','event']]","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:03:28.256685Z","iopub.execute_input":"2023-12-16T13:03:28.257708Z","iopub.status.idle":"2023-12-16T13:03:29.409Z","shell.execute_reply.started":"2023-12-16T13:03:28.257663Z","shell.execute_reply":"2023-12-16T13:03:29.408042Z"},"trusted":true},"execution_count":293,"outputs":[]},{"cell_type":"code","source":"train_df['Medication'] = le.fit_transform(train_df['Medication'])\ntrain_df['Time'] = train_df['Time'].astype(int)\ntrain_df['Visit'] = train_df['Visit'].astype(int)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:03:36.227719Z","iopub.execute_input":"2023-12-16T13:03:36.228535Z","iopub.status.idle":"2023-12-16T13:03:38.508815Z","shell.execute_reply.started":"2023-12-16T13:03:36.228495Z","shell.execute_reply":"2023-12-16T13:03:38.507897Z"},"trusted":true},"execution_count":294,"outputs":[]},{"cell_type":"code","source":"train_df.info()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:03:40.496408Z","iopub.execute_input":"2023-12-16T13:03:40.49748Z","iopub.status.idle":"2023-12-16T13:03:40.50822Z","shell.execute_reply.started":"2023-12-16T13:03:40.497437Z","shell.execute_reply":"2023-12-16T13:03:40.506911Z"},"trusted":true},"execution_count":295,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nInt64Index: 7062672 entries, 0 to 7062671\nData columns (total 7 columns):\n #   Column      Dtype  \n---  ------      -----  \n 0   Visit       int64  \n 1   Medication  int64  \n 2   Time        int64  \n 3   AccV        float64\n 4   AccML       float64\n 5   AccAP       float64\n 6   event       object \ndtypes: float64(3), int64(3), object(1)\nmemory usage: 431.1+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"# Define the target distribution for sampling\ntarget_distribution = {'Normal': 200000, 'Turn': 200000, 'StartHesitation': 200000, 'Walking': 200000,}\n\n# For the target classes, sample 150,000 records\nfor event_class in ['Normal', 'Turn', 'StartHesitation', 'Walking']:\n    class_data = train_df[train_df['event'].str.strip() == event_class.strip()]\n    if len(class_data) > target_distribution.get(event_class, 0):\n        # Downsample the majority class\n        downsampled_data = resample(class_data, replace=False, n_samples=target_distribution[event_class], random_state=42)\n        train_df = train_df[~(train_df['event'].str.strip() == event_class.strip())]\n        train_df = pd.concat([train_df, downsampled_data])\n\n# Now, 'train_df' contains 150,000 records for the classes 'Normal' and 'Turn'\n","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:42.764202Z","iopub.execute_input":"2023-12-16T13:21:42.765077Z","iopub.status.idle":"2023-12-16T13:21:45.44951Z","shell.execute_reply.started":"2023-12-16T13:21:42.765022Z","shell.execute_reply":"2023-12-16T13:21:45.448615Z"},"trusted":true},"execution_count":323,"outputs":[]},{"cell_type":"code","source":"train_df['event'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:45.451549Z","iopub.execute_input":"2023-12-16T13:21:45.452271Z","iopub.status.idle":"2023-12-16T13:21:45.621282Z","shell.execute_reply.started":"2023-12-16T13:21:45.452225Z","shell.execute_reply":"2023-12-16T13:21:45.620111Z"},"trusted":true},"execution_count":324,"outputs":[{"execution_count":324,"output_type":"execute_result","data":{"text/plain":"Normal             200000\nTurn               200000\nStartHesitation    200000\nWalking            200000\nName: event, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train_df['event'] = le.fit_transform(train_df['event'])","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:47.447883Z","iopub.execute_input":"2023-12-16T13:21:47.44887Z","iopub.status.idle":"2023-12-16T13:21:47.937792Z","shell.execute_reply.started":"2023-12-16T13:21:47.448828Z","shell.execute_reply":"2023-12-16T13:21:47.93689Z"},"trusted":true},"execution_count":325,"outputs":[]},{"cell_type":"code","source":"X = train_df.drop(['event'], axis=1)\ny = train_df['event']","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:48.742906Z","iopub.execute_input":"2023-12-16T13:21:48.743795Z","iopub.status.idle":"2023-12-16T13:21:48.767204Z","shell.execute_reply.started":"2023-12-16T13:21:48.743751Z","shell.execute_reply":"2023-12-16T13:21:48.766303Z"},"trusted":true},"execution_count":326,"outputs":[]},{"cell_type":"code","source":"X","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:49.701412Z","iopub.execute_input":"2023-12-16T13:21:49.701831Z","iopub.status.idle":"2023-12-16T13:21:49.717976Z","shell.execute_reply.started":"2023-12-16T13:21:49.701795Z","shell.execute_reply":"2023-12-16T13:21:49.716933Z"},"trusted":true},"execution_count":327,"outputs":[{"execution_count":327,"output_type":"execute_result","data":{"text/plain":"         Visit  Medication   Time       AccV     AccML     AccAP\n2240640      2           1     84  -8.809915  0.192200 -4.305225\n6677586     13           0   8868  -9.596486 -0.903512  1.763230\n1152303      5           0    762  -8.927560 -1.976379  3.229471\n6730622      5           1   3963  -9.533197  0.101340  3.424892\n2482870      4           0   3926  -8.892685 -0.257190 -0.722341\n...        ...         ...    ...        ...       ...       ...\n447852      20           1  69827  -8.367604  0.554272  2.812931\n448179      20           1  70154 -12.137678 -1.134769  1.192017\n5598249     19           1  31914  -9.783654 -1.135998  1.770068\n6416825     19           1  29707 -10.320910 -2.913588  7.827067\n7045902     20           1  77074  -8.523361 -1.525381  4.062965\n\n[800000 rows x 6 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Visit</th>\n      <th>Medication</th>\n      <th>Time</th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2240640</th>\n      <td>2</td>\n      <td>1</td>\n      <td>84</td>\n      <td>-8.809915</td>\n      <td>0.192200</td>\n      <td>-4.305225</td>\n    </tr>\n    <tr>\n      <th>6677586</th>\n      <td>13</td>\n      <td>0</td>\n      <td>8868</td>\n      <td>-9.596486</td>\n      <td>-0.903512</td>\n      <td>1.763230</td>\n    </tr>\n    <tr>\n      <th>1152303</th>\n      <td>5</td>\n      <td>0</td>\n      <td>762</td>\n      <td>-8.927560</td>\n      <td>-1.976379</td>\n      <td>3.229471</td>\n    </tr>\n    <tr>\n      <th>6730622</th>\n      <td>5</td>\n      <td>1</td>\n      <td>3963</td>\n      <td>-9.533197</td>\n      <td>0.101340</td>\n      <td>3.424892</td>\n    </tr>\n    <tr>\n      <th>2482870</th>\n      <td>4</td>\n      <td>0</td>\n      <td>3926</td>\n      <td>-8.892685</td>\n      <td>-0.257190</td>\n      <td>-0.722341</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>447852</th>\n      <td>20</td>\n      <td>1</td>\n      <td>69827</td>\n      <td>-8.367604</td>\n      <td>0.554272</td>\n      <td>2.812931</td>\n    </tr>\n    <tr>\n      <th>448179</th>\n      <td>20</td>\n      <td>1</td>\n      <td>70154</td>\n      <td>-12.137678</td>\n      <td>-1.134769</td>\n      <td>1.192017</td>\n    </tr>\n    <tr>\n      <th>5598249</th>\n      <td>19</td>\n      <td>1</td>\n      <td>31914</td>\n      <td>-9.783654</td>\n      <td>-1.135998</td>\n      <td>1.770068</td>\n    </tr>\n    <tr>\n      <th>6416825</th>\n      <td>19</td>\n      <td>1</td>\n      <td>29707</td>\n      <td>-10.320910</td>\n      <td>-2.913588</td>\n      <td>7.827067</td>\n    </tr>\n    <tr>\n      <th>7045902</th>\n      <td>20</td>\n      <td>1</td>\n      <td>77074</td>\n      <td>-8.523361</td>\n      <td>-1.525381</td>\n      <td>4.062965</td>\n    </tr>\n  </tbody>\n</table>\n<p>800000 rows √ó 6 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"y","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:52.019872Z","iopub.execute_input":"2023-12-16T13:21:52.020676Z","iopub.status.idle":"2023-12-16T13:21:52.02821Z","shell.execute_reply.started":"2023-12-16T13:21:52.020638Z","shell.execute_reply":"2023-12-16T13:21:52.027094Z"},"trusted":true},"execution_count":328,"outputs":[{"execution_count":328,"output_type":"execute_result","data":{"text/plain":"2240640    0\n6677586    0\n1152303    0\n6730622    0\n2482870    0\n          ..\n447852     3\n448179     3\n5598249    3\n6416825    3\n7045902    3\nName: event, Length: 800000, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"y.value_counts()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:53.814803Z","iopub.execute_input":"2023-12-16T13:21:53.81545Z","iopub.status.idle":"2023-12-16T13:21:53.829282Z","shell.execute_reply.started":"2023-12-16T13:21:53.815409Z","shell.execute_reply":"2023-12-16T13:21:53.828047Z"},"trusted":true},"execution_count":329,"outputs":[{"execution_count":329,"output_type":"execute_result","data":{"text/plain":"0    200000\n2    200000\n1    200000\n3    200000\nName: event, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# spliting dataset into training and test set\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1004)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:54.655728Z","iopub.execute_input":"2023-12-16T13:21:54.656326Z","iopub.status.idle":"2023-12-16T13:21:54.74652Z","shell.execute_reply.started":"2023-12-16T13:21:54.656278Z","shell.execute_reply":"2023-12-16T13:21:54.745637Z"},"trusted":true},"execution_count":330,"outputs":[]},{"cell_type":"code","source":"X_train.shape","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:56.421828Z","iopub.execute_input":"2023-12-16T13:21:56.422792Z","iopub.status.idle":"2023-12-16T13:21:56.429336Z","shell.execute_reply.started":"2023-12-16T13:21:56.422749Z","shell.execute_reply":"2023-12-16T13:21:56.428323Z"},"trusted":true},"execution_count":331,"outputs":[{"execution_count":331,"output_type":"execute_result","data":{"text/plain":"(560000, 6)"},"metadata":{}}]},{"cell_type":"code","source":"y_train.shape","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:56.60299Z","iopub.execute_input":"2023-12-16T13:21:56.603331Z","iopub.status.idle":"2023-12-16T13:21:56.61069Z","shell.execute_reply.started":"2023-12-16T13:21:56.6033Z","shell.execute_reply":"2023-12-16T13:21:56.609615Z"},"trusted":true},"execution_count":332,"outputs":[{"execution_count":332,"output_type":"execute_result","data":{"text/plain":"(560000,)"},"metadata":{}}]},{"cell_type":"code","source":"X_test.shape","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:56.813442Z","iopub.execute_input":"2023-12-16T13:21:56.813835Z","iopub.status.idle":"2023-12-16T13:21:56.820997Z","shell.execute_reply.started":"2023-12-16T13:21:56.813797Z","shell.execute_reply":"2023-12-16T13:21:56.819903Z"},"trusted":true},"execution_count":333,"outputs":[{"execution_count":333,"output_type":"execute_result","data":{"text/plain":"(240000, 6)"},"metadata":{}}]},{"cell_type":"code","source":"y_test.shape","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:56.954823Z","iopub.execute_input":"2023-12-16T13:21:56.955651Z","iopub.status.idle":"2023-12-16T13:21:56.961501Z","shell.execute_reply.started":"2023-12-16T13:21:56.955614Z","shell.execute_reply":"2023-12-16T13:21:56.960503Z"},"trusted":true},"execution_count":334,"outputs":[{"execution_count":334,"output_type":"execute_result","data":{"text/plain":"(240000,)"},"metadata":{}}]},{"cell_type":"code","source":"y_test.value_counts()","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:21:58.659112Z","iopub.execute_input":"2023-12-16T13:21:58.659488Z","iopub.status.idle":"2023-12-16T13:21:58.669807Z","shell.execute_reply.started":"2023-12-16T13:21:58.659451Z","shell.execute_reply":"2023-12-16T13:21:58.668633Z"},"trusted":true},"execution_count":335,"outputs":[{"execution_count":335,"output_type":"execute_result","data":{"text/plain":"0    60241\n2    60142\n3    60015\n1    59602\nName: event, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Classifiers**","metadata":{}},{"cell_type":"code","source":"# Decision tree classifier\n\n# Initialize the Decision Tree Classifier\nclf = DecisionTreeClassifier(random_state=42)\n\n# Train the classifier\nclf.fit(X_train, y_train)\n\n# Make predictions on the test set\ny_pred = clf.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:22:02.391252Z","iopub.execute_input":"2023-12-16T13:22:02.391906Z","iopub.status.idle":"2023-12-16T13:22:08.760568Z","shell.execute_reply.started":"2023-12-16T13:22:02.391865Z","shell.execute_reply":"2023-12-16T13:22:08.759345Z"},"trusted":true},"execution_count":336,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:22:08.762632Z","iopub.execute_input":"2023-12-16T13:22:08.762953Z","iopub.status.idle":"2023-12-16T13:22:09.178524Z","shell.execute_reply.started":"2023-12-16T13:22:08.76292Z","shell.execute_reply":"2023-12-16T13:22:09.177455Z"},"trusted":true},"execution_count":337,"outputs":[{"name":"stdout","text":"Accuracy: 0.8179125\nConfusion Matrix:\n[[43936  4339 10113  1853]\n [ 3932 52471  2576   623]\n [ 9494  2825 44981  2842]\n [ 1653   641  2810 54911]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.74      0.73      0.74     60241\n           1       0.87      0.88      0.88     59602\n           2       0.74      0.75      0.75     60142\n           3       0.91      0.91      0.91     60015\n\n    accuracy                           0.82    240000\n   macro avg       0.82      0.82      0.82    240000\nweighted avg       0.82      0.82      0.82    240000\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# Random Forest\n\n# Initialize the Random Forest classifier\nrf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)\n\n# Train the classifier\nrf_classifier.fit(X_train, y_train)\n\ny_pred = rf_classifier.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:22:09.179913Z","iopub.execute_input":"2023-12-16T13:22:09.180312Z","iopub.status.idle":"2023-12-16T13:24:52.228744Z","shell.execute_reply.started":"2023-12-16T13:22:09.180277Z","shell.execute_reply":"2023-12-16T13:24:52.227802Z"},"trusted":true},"execution_count":338,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:24:52.230727Z","iopub.execute_input":"2023-12-16T13:24:52.231043Z","iopub.status.idle":"2023-12-16T13:24:52.651559Z","shell.execute_reply.started":"2023-12-16T13:24:52.231011Z","shell.execute_reply":"2023-12-16T13:24:52.650393Z"},"trusted":true},"execution_count":339,"outputs":[{"name":"stdout","text":"Accuracy: 0.8603291666666667\nConfusion Matrix:\n[[48800  3900  6346  1195]\n [ 2139 56170   931   362]\n [ 9506  2978 44917  2741]\n [ 1581   641  1201 56592]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.79      0.81      0.80     60241\n           1       0.88      0.94      0.91     59602\n           2       0.84      0.75      0.79     60142\n           3       0.93      0.94      0.94     60015\n\n    accuracy                           0.86    240000\n   macro avg       0.86      0.86      0.86    240000\nweighted avg       0.86      0.86      0.86    240000\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# Naive Bayes Classifier\n# Initialize the Naive Bayes Classifier\nclf = GaussianNB()\n\n# Train the classifier\nclf.fit(X_train, y_train)\n\n# Make predictions on the test set\ny_pred = clf.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:24:52.652969Z","iopub.execute_input":"2023-12-16T13:24:52.653369Z","iopub.status.idle":"2023-12-16T13:24:52.822965Z","shell.execute_reply.started":"2023-12-16T13:24:52.653332Z","shell.execute_reply":"2023-12-16T13:24:52.82204Z"},"trusted":true},"execution_count":340,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:24:52.824085Z","iopub.execute_input":"2023-12-16T13:24:52.824397Z","iopub.status.idle":"2023-12-16T13:24:53.246922Z","shell.execute_reply.started":"2023-12-16T13:24:52.824366Z","shell.execute_reply":"2023-12-16T13:24:53.24576Z"},"trusted":true},"execution_count":341,"outputs":[{"name":"stdout","text":"Accuracy: 0.568725\nConfusion Matrix:\n[[51399  7576   866   400]\n [17980 35376   779  5467]\n [26640 10315 10969 12218]\n [12459  3767  5039 38750]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.47      0.85      0.61     60241\n           1       0.62      0.59      0.61     59602\n           2       0.62      0.18      0.28     60142\n           3       0.68      0.65      0.66     60015\n\n    accuracy                           0.57    240000\n   macro avg       0.60      0.57      0.54    240000\nweighted avg       0.60      0.57      0.54    240000\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# XG boost\n\n# Initialize the XGBoost classifier\nxgb_classifier = XGBClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)\n\n# Train the classifier\nxgb_classifier.fit(X_train, y_train)\n\n# Make predictions on the test set\ny_pred = xgb_classifier.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:25:39.934941Z","iopub.execute_input":"2023-12-16T13:25:39.935328Z","iopub.status.idle":"2023-12-16T13:26:51.328686Z","shell.execute_reply.started":"2023-12-16T13:25:39.935293Z","shell.execute_reply":"2023-12-16T13:26:51.327644Z"},"trusted":true},"execution_count":342,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:26:51.330465Z","iopub.execute_input":"2023-12-16T13:26:51.331116Z","iopub.status.idle":"2023-12-16T13:26:51.756551Z","shell.execute_reply.started":"2023-12-16T13:26:51.331067Z","shell.execute_reply":"2023-12-16T13:26:51.755325Z"},"trusted":true},"execution_count":343,"outputs":[{"name":"stdout","text":"Accuracy: 0.6975416666666666\nConfusion Matrix:\n[[45916  7513  5502  1310]\n [ 8831 47753  2663   355]\n [16592  7367 27907  8276]\n [ 4920  3356  5905 45834]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.60      0.76      0.67     60241\n           1       0.72      0.80      0.76     59602\n           2       0.66      0.46      0.55     60142\n           3       0.82      0.76      0.79     60015\n\n    accuracy                           0.70    240000\n   macro avg       0.70      0.70      0.69    240000\nweighted avg       0.70      0.70      0.69    240000\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# LGBM\n\n# Initialize the LightGBM classifier\nlgbm_classifier = LGBMClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)\n\n# Train the classifier\nlgbm_classifier.fit(X_train, y_train)\n\n# Make predictions on the test set\ny_pred = lgbm_classifier.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:27:23.604237Z","iopub.execute_input":"2023-12-16T13:27:23.604649Z","iopub.status.idle":"2023-12-16T13:27:31.22359Z","shell.execute_reply.started":"2023-12-16T13:27:23.604608Z","shell.execute_reply":"2023-12-16T13:27:31.222647Z"},"trusted":true},"execution_count":344,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:27:31.225147Z","iopub.execute_input":"2023-12-16T13:27:31.226022Z","iopub.status.idle":"2023-12-16T13:27:31.641975Z","shell.execute_reply.started":"2023-12-16T13:27:31.22598Z","shell.execute_reply":"2023-12-16T13:27:31.640881Z"},"trusted":true},"execution_count":345,"outputs":[{"name":"stdout","text":"Accuracy: 0.7138125\nConfusion Matrix:\n[[44820  7216  6571  1634]\n [ 7231 48892  2996   483]\n [14757  6574 30837  7974]\n [ 4278  3076  5895 46766]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.63      0.74      0.68     60241\n           1       0.74      0.82      0.78     59602\n           2       0.67      0.51      0.58     60142\n           3       0.82      0.78      0.80     60015\n\n    accuracy                           0.71    240000\n   macro avg       0.72      0.71      0.71    240000\nweighted avg       0.72      0.71      0.71    240000\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# KNN\n\n# Initialize the KNN classifier\nknn_classifier = KNeighborsClassifier(n_neighbors=5)  # You can adjust the number of neighbors (n_neighbors) based on your preference\n\n# Train the classifier\nknn_classifier.fit(X_train, y_train)\n\n# Make predictions on the test set\ny_pred = knn_classifier.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:27:35.209714Z","iopub.execute_input":"2023-12-16T13:27:35.21011Z","iopub.status.idle":"2023-12-16T13:27:45.051515Z","shell.execute_reply.started":"2023-12-16T13:27:35.210073Z","shell.execute_reply":"2023-12-16T13:27:45.050626Z"},"trusted":true},"execution_count":346,"outputs":[]},{"cell_type":"code","source":"evaluate_metrics(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2023-12-16T13:27:45.053181Z","iopub.execute_input":"2023-12-16T13:27:45.0535Z","iopub.status.idle":"2023-12-16T13:27:45.467355Z","shell.execute_reply.started":"2023-12-16T13:27:45.053469Z","shell.execute_reply":"2023-12-16T13:27:45.466307Z"},"trusted":true},"execution_count":347,"outputs":[{"name":"stdout","text":"Accuracy: 0.6580333333333334\nConfusion Matrix:\n[[36469 11244  9286  3242]\n [ 6834 47301  3626  1841]\n [12278  8861 25813 13190]\n [ 3425  3460  4785 48345]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.62      0.61      0.61     60241\n           1       0.67      0.79      0.73     59602\n           2       0.59      0.43      0.50     60142\n           3       0.73      0.81      0.76     60015\n\n    accuracy                           0.66    240000\n   macro avg       0.65      0.66      0.65    240000\nweighted avg       0.65      0.66      0.65    240000\n\n","output_type":"stream"}]},{"cell_type":"code","source":"test_tdcsfog_path = '/kaggle/input/tlvmc-parkinsons-freezing-gait-prediction/test/tdcsfog/003f117e14.csv'\ntest_tdcsfog = pd.read_csv(test_tdcsfog_path)\nname = os.path.basename(test_tdcsfog_path)\nid_value = name.split('.')[0]\ntest_tdcsfog['Id_value'] = id_value\ntest_tdcsfog['Id'] = test_tdcsfog['Id_value'].astype(str) + '_' + test_tdcsfog['Time'].astype(str)\ntest_tdcsfog = test_tdcsfog[['Id','AccV','AccML','AccAP']]\ntest_tdcsfog.set_index('Id',inplace=True)","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:37:08.17783Z","iopub.execute_input":"2023-12-15T11:37:08.178249Z","iopub.status.idle":"2023-12-15T11:37:08.215941Z","shell.execute_reply.started":"2023-12-15T11:37:08.178209Z","shell.execute_reply":"2023-12-15T11:37:08.21501Z"},"trusted":true},"execution_count":113,"outputs":[]},{"cell_type":"code","source":"test_tdcsfog","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:37:08.217957Z","iopub.execute_input":"2023-12-15T11:37:08.218297Z","iopub.status.idle":"2023-12-15T11:37:08.233434Z","shell.execute_reply.started":"2023-12-15T11:37:08.218264Z","shell.execute_reply":"2023-12-15T11:37:08.23222Z"},"trusted":true},"execution_count":114,"outputs":[{"execution_count":114,"output_type":"execute_result","data":{"text/plain":"                     AccV     AccML     AccAP\nId                                           \n003f117e14_0    -9.533939  0.566322 -1.413525\n003f117e14_1    -9.536140  0.564137 -1.440621\n003f117e14_2    -9.529345  0.561765 -1.429332\n003f117e14_3    -9.531239  0.564227 -1.415490\n003f117e14_4    -9.540825  0.561854 -1.429471\n...                   ...       ...       ...\n003f117e14_4677 -9.351431  0.370047 -2.286318\n003f117e14_4678 -9.341410  0.347721 -2.321991\n003f117e14_4679 -9.350667  0.361341 -2.297158\n003f117e14_4680 -9.343977  0.365726 -2.292650\n003f117e14_4681 -9.348477  0.379439 -2.335422\n\n[4682 rows x 3 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n    </tr>\n    <tr>\n      <th>Id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>003f117e14_0</th>\n      <td>-9.533939</td>\n      <td>0.566322</td>\n      <td>-1.413525</td>\n    </tr>\n    <tr>\n      <th>003f117e14_1</th>\n      <td>-9.536140</td>\n      <td>0.564137</td>\n      <td>-1.440621</td>\n    </tr>\n    <tr>\n      <th>003f117e14_2</th>\n      <td>-9.529345</td>\n      <td>0.561765</td>\n      <td>-1.429332</td>\n    </tr>\n    <tr>\n      <th>003f117e14_3</th>\n      <td>-9.531239</td>\n      <td>0.564227</td>\n      <td>-1.415490</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4</th>\n      <td>-9.540825</td>\n      <td>0.561854</td>\n      <td>-1.429471</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4677</th>\n      <td>-9.351431</td>\n      <td>0.370047</td>\n      <td>-2.286318</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4678</th>\n      <td>-9.341410</td>\n      <td>0.347721</td>\n      <td>-2.321991</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4679</th>\n      <td>-9.350667</td>\n      <td>0.361341</td>\n      <td>-2.297158</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4680</th>\n      <td>-9.343977</td>\n      <td>0.365726</td>\n      <td>-2.292650</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4681</th>\n      <td>-9.348477</td>\n      <td>0.379439</td>\n      <td>-2.335422</td>\n    </tr>\n  </tbody>\n</table>\n<p>4682 rows √ó 3 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test_tdcsfog_pred=lgbm_classifier.predict(test_tdcsfog)\ntest_tdcsfog['event'] = test_tdcsfog_pred","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:38:24.797908Z","iopub.execute_input":"2023-12-15T11:38:24.798925Z","iopub.status.idle":"2023-12-15T11:38:24.828858Z","shell.execute_reply.started":"2023-12-15T11:38:24.798881Z","shell.execute_reply":"2023-12-15T11:38:24.827949Z"},"trusted":true},"execution_count":115,"outputs":[]},{"cell_type":"code","source":"test_tdcsfog","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:38:25.230988Z","iopub.execute_input":"2023-12-15T11:38:25.231993Z","iopub.status.idle":"2023-12-15T11:38:25.246358Z","shell.execute_reply.started":"2023-12-15T11:38:25.231951Z","shell.execute_reply":"2023-12-15T11:38:25.245237Z"},"trusted":true},"execution_count":116,"outputs":[{"execution_count":116,"output_type":"execute_result","data":{"text/plain":"                     AccV     AccML     AccAP  event\nId                                                  \n003f117e14_0    -9.533939  0.566322 -1.413525      0\n003f117e14_1    -9.536140  0.564137 -1.440621      0\n003f117e14_2    -9.529345  0.561765 -1.429332      0\n003f117e14_3    -9.531239  0.564227 -1.415490      0\n003f117e14_4    -9.540825  0.561854 -1.429471      0\n...                   ...       ...       ...    ...\n003f117e14_4677 -9.351431  0.370047 -2.286318      0\n003f117e14_4678 -9.341410  0.347721 -2.321991      0\n003f117e14_4679 -9.350667  0.361341 -2.297158      0\n003f117e14_4680 -9.343977  0.365726 -2.292650      0\n003f117e14_4681 -9.348477  0.379439 -2.335422      0\n\n[4682 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n      <th>event</th>\n    </tr>\n    <tr>\n      <th>Id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>003f117e14_0</th>\n      <td>-9.533939</td>\n      <td>0.566322</td>\n      <td>-1.413525</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>003f117e14_1</th>\n      <td>-9.536140</td>\n      <td>0.564137</td>\n      <td>-1.440621</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>003f117e14_2</th>\n      <td>-9.529345</td>\n      <td>0.561765</td>\n      <td>-1.429332</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>003f117e14_3</th>\n      <td>-9.531239</td>\n      <td>0.564227</td>\n      <td>-1.415490</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4</th>\n      <td>-9.540825</td>\n      <td>0.561854</td>\n      <td>-1.429471</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4677</th>\n      <td>-9.351431</td>\n      <td>0.370047</td>\n      <td>-2.286318</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4678</th>\n      <td>-9.341410</td>\n      <td>0.347721</td>\n      <td>-2.321991</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4679</th>\n      <td>-9.350667</td>\n      <td>0.361341</td>\n      <td>-2.297158</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4680</th>\n      <td>-9.343977</td>\n      <td>0.365726</td>\n      <td>-2.292650</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>003f117e14_4681</th>\n      <td>-9.348477</td>\n      <td>0.379439</td>\n      <td>-2.335422</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4682 rows √ó 4 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test_tdcsfog['StartHesitation'] = np.where(test_tdcsfog['event']==1, 1, 0)\ntest_tdcsfog['Turn'] = np.where(test_tdcsfog['event']==2, 1, 0)\ntest_tdcsfog['Walking'] = np.where(test_tdcsfog['event']==3, 1, 0)\ntest_tdcsfog.reset_index('Id', inplace=True)","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:38:28.066797Z","iopub.execute_input":"2023-12-15T11:38:28.067572Z","iopub.status.idle":"2023-12-15T11:38:28.077097Z","shell.execute_reply.started":"2023-12-15T11:38:28.067534Z","shell.execute_reply":"2023-12-15T11:38:28.076054Z"},"trusted":true},"execution_count":117,"outputs":[]},{"cell_type":"code","source":"test_tdcsfog","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:38:29.034352Z","iopub.execute_input":"2023-12-15T11:38:29.035452Z","iopub.status.idle":"2023-12-15T11:38:29.053375Z","shell.execute_reply.started":"2023-12-15T11:38:29.035409Z","shell.execute_reply":"2023-12-15T11:38:29.052098Z"},"trusted":true},"execution_count":118,"outputs":[{"execution_count":118,"output_type":"execute_result","data":{"text/plain":"                   Id      AccV     AccML     AccAP  event  StartHesitation  \\\n0        003f117e14_0 -9.533939  0.566322 -1.413525      0                0   \n1        003f117e14_1 -9.536140  0.564137 -1.440621      0                0   \n2        003f117e14_2 -9.529345  0.561765 -1.429332      0                0   \n3        003f117e14_3 -9.531239  0.564227 -1.415490      0                0   \n4        003f117e14_4 -9.540825  0.561854 -1.429471      0                0   \n...               ...       ...       ...       ...    ...              ...   \n4677  003f117e14_4677 -9.351431  0.370047 -2.286318      0                0   \n4678  003f117e14_4678 -9.341410  0.347721 -2.321991      0                0   \n4679  003f117e14_4679 -9.350667  0.361341 -2.297158      0                0   \n4680  003f117e14_4680 -9.343977  0.365726 -2.292650      0                0   \n4681  003f117e14_4681 -9.348477  0.379439 -2.335422      0                0   \n\n      Turn  Walking  \n0        0        0  \n1        0        0  \n2        0        0  \n3        0        0  \n4        0        0  \n...    ...      ...  \n4677     0        0  \n4678     0        0  \n4679     0        0  \n4680     0        0  \n4681     0        0  \n\n[4682 rows x 8 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>AccV</th>\n      <th>AccML</th>\n      <th>AccAP</th>\n      <th>event</th>\n      <th>StartHesitation</th>\n      <th>Turn</th>\n      <th>Walking</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>003f117e14_0</td>\n      <td>-9.533939</td>\n      <td>0.566322</td>\n      <td>-1.413525</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>003f117e14_1</td>\n      <td>-9.536140</td>\n      <td>0.564137</td>\n      <td>-1.440621</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>003f117e14_2</td>\n      <td>-9.529345</td>\n      <td>0.561765</td>\n      <td>-1.429332</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>003f117e14_3</td>\n      <td>-9.531239</td>\n      <td>0.564227</td>\n      <td>-1.415490</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>003f117e14_4</td>\n      <td>-9.540825</td>\n      <td>0.561854</td>\n      <td>-1.429471</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4677</th>\n      <td>003f117e14_4677</td>\n      <td>-9.351431</td>\n      <td>0.370047</td>\n      <td>-2.286318</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4678</th>\n      <td>003f117e14_4678</td>\n      <td>-9.341410</td>\n      <td>0.347721</td>\n      <td>-2.321991</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4679</th>\n      <td>003f117e14_4679</td>\n      <td>-9.350667</td>\n      <td>0.361341</td>\n      <td>-2.297158</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4680</th>\n      <td>003f117e14_4680</td>\n      <td>-9.343977</td>\n      <td>0.365726</td>\n      <td>-2.292650</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4681</th>\n      <td>003f117e14_4681</td>\n      <td>-9.348477</td>\n      <td>0.379439</td>\n      <td>-2.335422</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4682 rows √ó 8 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test_tdcsfog.shape","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:38:31.129978Z","iopub.execute_input":"2023-12-15T11:38:31.130923Z","iopub.status.idle":"2023-12-15T11:38:31.137436Z","shell.execute_reply.started":"2023-12-15T11:38:31.130883Z","shell.execute_reply":"2023-12-15T11:38:31.136291Z"},"trusted":true},"execution_count":119,"outputs":[{"execution_count":119,"output_type":"execute_result","data":{"text/plain":"(4682, 8)"},"metadata":{}}]},{"cell_type":"code","source":"print(test_tdcsfog['event'].value_counts(),'\\n')\nprint(test_tdcsfog['StartHesitation'].value_counts(),'\\n')\nprint(test_tdcsfog['Turn'].value_counts(),'\\n')\nprint(test_tdcsfog['Walking'].value_counts(),'\\n')","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:38:32.34555Z","iopub.execute_input":"2023-12-15T11:38:32.346339Z","iopub.status.idle":"2023-12-15T11:38:32.356435Z","shell.execute_reply.started":"2023-12-15T11:38:32.346297Z","shell.execute_reply":"2023-12-15T11:38:32.355165Z"},"trusted":true},"execution_count":120,"outputs":[{"name":"stdout","text":"0    2033\n1    1457\n2     973\n3     219\nName: event, dtype: int64 \n\n0    3225\n1    1457\nName: StartHesitation, dtype: int64 \n\n0    3709\n1     973\nName: Turn, dtype: int64 \n\n0    4463\n1     219\nName: Walking, dtype: int64 \n\n","output_type":"stream"}]},{"cell_type":"code","source":"submit = pd.concat([test_tdcsfog,test_defog])\nsubmit = submit[['Id', 'StartHesitation', 'Turn','Walking']]","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:38:34.652619Z","iopub.execute_input":"2023-12-15T11:38:34.653594Z","iopub.status.idle":"2023-12-15T11:38:34.683213Z","shell.execute_reply.started":"2023-12-15T11:38:34.653551Z","shell.execute_reply":"2023-12-15T11:38:34.682367Z"},"trusted":true},"execution_count":121,"outputs":[]},{"cell_type":"code","source":"submit.to_csv('/kaggle/working/submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:38:35.738551Z","iopub.execute_input":"2023-12-15T11:38:35.739742Z","iopub.status.idle":"2023-12-15T11:38:36.039381Z","shell.execute_reply.started":"2023-12-15T11:38:35.7397Z","shell.execute_reply":"2023-12-15T11:38:36.038262Z"},"trusted":true},"execution_count":122,"outputs":[]},{"cell_type":"code","source":"sample = pd.read_csv('/kaggle/working/submission.csv')","metadata":{"execution":{"iopub.status.busy":"2023-12-15T11:38:38.457608Z","iopub.execute_input":"2023-12-15T11:38:38.458009Z","iopub.status.idle":"2023-12-15T11:38:38.529381Z","shell.execute_reply.started":"2023-12-15T11:38:38.457971Z","shell.execute_reply":"2023-12-15T11:38:38.5285Z"},"trusted":true},"execution_count":123,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}